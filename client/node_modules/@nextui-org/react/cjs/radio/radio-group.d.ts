import React from 'react';
import { NormalSizes, SimpleColors } from '../utils/prop-types';
interface Props {
    value?: string | number;
    initialValue?: string | number;
    disabled?: boolean;
    color?: SimpleColors | string;
    textColor?: SimpleColors | string;
    size?: NormalSizes | number;
    onChange?: (value: string | number) => void;
    className?: string;
    row?: boolean;
}
declare const defaultProps: {
    disabled: boolean;
    size: "mini" | "small" | "medium" | "large" | "xlarge";
    color: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    textColor: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    className: string;
    row: boolean;
};
declare type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
export declare type RadioGroupProps = Props & typeof defaultProps & NativeAttrs;
export declare const getRadioSize: (size: NormalSizes | number) => string;
declare const _default: React.ComponentType<Partial<{
    disabled: boolean;
    size: "mini" | "small" | "medium" | "large" | "xlarge";
    color: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    textColor: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    className: string;
    row: boolean;
}> & Omit<React.PropsWithChildren<RadioGroupProps>, "row" | "className" | "color" | "textColor" | "size" | "disabled">>;
export default _default;
