"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _react = _interopRequireWildcard(require("react"));

var _useWarning = _interopRequireDefault(require("../use-warning"));

var _useTheme = _interopRequireDefault(require("../use-theme"));

var _drip = _interopRequireDefault(require("../utils/drip"));

var _buttonLoading = _interopRequireDefault(require("./button-loading"));

var _utils = require("./utils");

var _buttonGroupContext = require("./button-group-context");

var _buttonIcon = _interopRequireDefault(require("./button-icon"));

var _styles = require("./styles");

var _color = require("../utils/color");

var _styles2 = require("../utils/styles");

var _dimensions = require("../utils/dimensions");

var _assertion = require("../utils/assertion");

var _clsx = _interopRequireDefault(require("../utils/clsx"));

var _useDrip = _interopRequireDefault(require("../use-drip"));

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const defaultProps = {
  color: 'default',
  size: 'medium',
  htmlType: 'button',
  loaderType: 'default',
  borderWeight: 'normal',
  flat: false,
  light: false,
  loading: false,
  rounded: false,
  shadow: false,
  auto: false,
  bordered: false,
  ghost: false,
  animated: true,
  disabled: false,
  className: ''
};

const Button = /*#__PURE__*/_react.default.forwardRef(({ ...btnProps
}, ref) => {
  var _hover$style, _hover$border, _hover$border2, _hover$style2, _hover$style3, _hover$border3, _hover$border4;

  const theme = (0, _useTheme.default)();
  const buttonRef = (0, _react.useRef)(null);
  (0, _react.useImperativeHandle)(ref, () => buttonRef.current);
  const groupConfig = (0, _buttonGroupContext.useButtonGroupContext)();
  const filteredProps = (0, _utils.filterPropsWithGroup)(btnProps, groupConfig);
  /* eslint-disable @typescript-eslint/no-unused-vars */

  const {
    children,
    disabled,
    loading,
    shadow,
    animated,
    light,
    flat,
    rounded,
    onClick,
    auto,
    size,
    icon,
    htmlType,
    iconRight,
    className,
    loaderType,
    bordered,
    ghost,
    style: buttonStyle,
    ...props
  } = filteredProps;
  /* eslint-enable @typescript-eslint/no-unused-vars */

  if (_assertion.__DEV__ && filteredProps.color === 'gradient' && (flat || light)) {
    (0, _useWarning.default)('Using the gradient color on flat and light buttons will have no effect.');
  }

  const hasIcon = icon || iconRight;
  const isRight = Boolean(iconRight);
  const {
    bg,
    color,
    loaderBg,
    border,
    style,
    hover
  } = (0, _react.useMemo)(() => (0, _styles.getButtonColors)(theme.palette, filteredProps), [theme.palette, filteredProps]);
  const radius = (0, _react.useMemo)(() => (0, _dimensions.getNormalRadius)(size, rounded), [size, rounded]);
  const shadowColor = (0, _react.useMemo)(() => shadow ? (0, _color.getNormalShadowColor)(filteredProps.color, theme.palette) : '', [theme.palette, filteredProps, shadow]);
  const {
    cursor,
    events
  } = (0, _react.useMemo)(() => (0, _styles.getButtonCursor)(disabled, loading), [disabled, loading]);
  const {
    className: focusClassName,
    styles: focusStyles
  } = (0, _styles2.getFocusStyles)(theme);
  const {
    height,
    minWidth,
    padding,
    width,
    fontSize,
    loaderSize
  } = (0, _react.useMemo)(() => (0, _styles.getButtonSize)(size, auto), [size, auto]);
  const dripColor = (0, _react.useMemo)(() => (0, _styles.getButtonDripColor)(theme.palette, filteredProps), [theme.palette, filteredProps]);
  const {
    onClick: onDripClickHandler,
    ...dripBindings
  } = (0, _useDrip.default)(false, buttonRef);
  const paddingForAutoMode = (0, _react.useMemo)(() => auto || size === 'mini' ? `calc(var(--next-ui-button-height) / 2 + var(--next-ui-button-padding) * .5)` : 0, [auto, size]);
  const hoverBeforeOpacity = (0, _react.useMemo)(() => filteredProps.color === 'gradient' && ghost ? 1 : 0, [ghost, filteredProps]);
  const paddingForBorderedGradient = (0, _react.useMemo)(() => filteredProps.color === 'gradient' && (bordered || ghost) ? `var(--next-ui-button-padding)` : 0, [filteredProps.color, bordered]);

  const clickHandler = event => {
    if (disabled || loading) return;

    if (animated && buttonRef.current) {
      onDripClickHandler(event);
    }

    onClick && onClick(event);
  }; // to avoid passing borderweight prop to the html button element


  delete props.borderWeight;
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("button", {
    ref: buttonRef,
    type: htmlType,
    disabled: disabled,
    onClick: clickHandler,
    style: { ...style,
      ...buttonStyle
    },
    ...props,
    className: _style.default.dynamic([["2827454966", [bg, padding, height, height, minWidth, width, radius, (border == null ? void 0 : border.width) || '2px', (border == null ? void 0 : border.display) || 'none', (border == null ? void 0 : border.color) || 'transparent', fontSize, color, cursor, events, shadowColor, radius, padding, height, color, bg, hover == null ? void 0 : hover.bg, radius, hoverBeforeOpacity, animated ? 'scale(0.97)' : 'none', (hover == null ? void 0 : hover.bg) || 'inherit', hover == null ? void 0 : hover.color, (hover == null ? void 0 : (_hover$style = hover.style) == null ? void 0 : _hover$style.filter) || 'none', hover == null ? void 0 : hover.color, (hover == null ? void 0 : (_hover$border = hover.border) == null ? void 0 : _hover$border.color) || 'transparent', hover == null ? void 0 : (_hover$border2 = hover.border) == null ? void 0 : _hover$border2.width, hover == null ? void 0 : hover.padding, cursor, events, bordered || ghost ? (border == null ? void 0 : border.width) || '2px' : '0', paddingForBorderedGradient, loading ? 0 : 1, paddingForAutoMode, paddingForAutoMode]]]) + " " + (props && props.className != null && props.className || (0, _clsx.default)('button', {
      disabled
    }, focusClassName, className) || ""),
    children: [loading && /*#__PURE__*/(0, _jsxRuntime.jsx)(_buttonLoading.default, {
      size: loaderSize,
      type: loaderType,
      color: color,
      background: loaderBg
    }), _react.default.Children.count(children) === 0 ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_buttonIcon.default, {
      isRight: isRight,
      isSingle: true,
      children: hasIcon
    }) : hasIcon ? /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: _style.default.dynamic([["2827454966", [bg, padding, height, height, minWidth, width, radius, (border == null ? void 0 : border.width) || '2px', (border == null ? void 0 : border.display) || 'none', (border == null ? void 0 : border.color) || 'transparent', fontSize, color, cursor, events, shadowColor, radius, padding, height, color, bg, hover == null ? void 0 : hover.bg, radius, hoverBeforeOpacity, animated ? 'scale(0.97)' : 'none', (hover == null ? void 0 : hover.bg) || 'inherit', hover == null ? void 0 : hover.color, (hover == null ? void 0 : (_hover$style = hover.style) == null ? void 0 : _hover$style.filter) || 'none', hover == null ? void 0 : hover.color, (hover == null ? void 0 : (_hover$border = hover.border) == null ? void 0 : _hover$border.color) || 'transparent', hover == null ? void 0 : (_hover$border2 = hover.border) == null ? void 0 : _hover$border2.width, hover == null ? void 0 : hover.padding, cursor, events, bordered || ghost ? (border == null ? void 0 : border.width) || '2px' : '0', paddingForBorderedGradient, loading ? 0 : 1, paddingForAutoMode, paddingForAutoMode]]]),
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_buttonIcon.default, {
        isRight: isRight,
        children: hasIcon
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: _style.default.dynamic([["2827454966", [bg, padding, height, height, minWidth, width, radius, (border == null ? void 0 : border.width) || '2px', (border == null ? void 0 : border.display) || 'none', (border == null ? void 0 : border.color) || 'transparent', fontSize, color, cursor, events, shadowColor, radius, padding, height, color, bg, hover == null ? void 0 : hover.bg, radius, hoverBeforeOpacity, animated ? 'scale(0.97)' : 'none', (hover == null ? void 0 : hover.bg) || 'inherit', hover == null ? void 0 : hover.color, (hover == null ? void 0 : (_hover$style = hover.style) == null ? void 0 : _hover$style.filter) || 'none', hover == null ? void 0 : hover.color, (hover == null ? void 0 : (_hover$border = hover.border) == null ? void 0 : _hover$border.color) || 'transparent', hover == null ? void 0 : (_hover$border2 = hover.border) == null ? void 0 : _hover$border2.width, hover == null ? void 0 : hover.padding, cursor, events, bordered || ghost ? (border == null ? void 0 : border.width) || '2px' : '0', paddingForBorderedGradient, loading ? 0 : 1, paddingForAutoMode, paddingForAutoMode]]]) + " " + `text ${isRight ? 'right' : 'left'}`,
        children: children
      })]
    }) : /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: _style.default.dynamic([["2827454966", [bg, padding, height, height, minWidth, width, radius, (border == null ? void 0 : border.width) || '2px', (border == null ? void 0 : border.display) || 'none', (border == null ? void 0 : border.color) || 'transparent', fontSize, color, cursor, events, shadowColor, radius, padding, height, color, bg, hover == null ? void 0 : hover.bg, radius, hoverBeforeOpacity, animated ? 'scale(0.97)' : 'none', (hover == null ? void 0 : hover.bg) || 'inherit', hover == null ? void 0 : hover.color, (hover == null ? void 0 : (_hover$style = hover.style) == null ? void 0 : _hover$style.filter) || 'none', hover == null ? void 0 : hover.color, (hover == null ? void 0 : (_hover$border = hover.border) == null ? void 0 : _hover$border.color) || 'transparent', hover == null ? void 0 : (_hover$border2 = hover.border) == null ? void 0 : _hover$border2.width, hover == null ? void 0 : hover.padding, cursor, events, bordered || ghost ? (border == null ? void 0 : border.width) || '2px' : '0', paddingForBorderedGradient, loading ? 0 : 1, paddingForAutoMode, paddingForAutoMode]]]) + " " + "text",
      children: children
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_drip.default, {
      color: dripColor,
      ...dripBindings
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_style.default, {
      id: "2827454966",
      dynamic: [bg, padding, height, height, minWidth, width, radius, (border == null ? void 0 : border.width) || '2px', (border == null ? void 0 : border.display) || 'none', (border == null ? void 0 : border.color) || 'transparent', fontSize, color, cursor, events, shadowColor, radius, padding, height, color, bg, hover == null ? void 0 : hover.bg, radius, hoverBeforeOpacity, animated ? 'scale(0.97)' : 'none', (hover == null ? void 0 : hover.bg) || 'inherit', hover == null ? void 0 : hover.color, (hover == null ? void 0 : (_hover$style = hover.style) == null ? void 0 : _hover$style.filter) || 'none', hover == null ? void 0 : hover.color, (hover == null ? void 0 : (_hover$border = hover.border) == null ? void 0 : _hover$border.color) || 'transparent', hover == null ? void 0 : (_hover$border2 = hover.border) == null ? void 0 : _hover$border2.width, hover == null ? void 0 : hover.padding, cursor, events, bordered || ghost ? (border == null ? void 0 : border.width) || '2px' : '0', paddingForBorderedGradient, loading ? 0 : 1, paddingForAutoMode, paddingForAutoMode],
      children: `.button.__jsx-style-dynamic-selector{background:${bg};box-sizing:border-box;display:inline-block;padding:0 ${padding};height:${height};line-height:${height};min-width:${minWidth};width:${width};border-radius:${radius};border:${(border == null ? void 0 : border.width) || '2px'} ${(border == null ? void 0 : border.display) || 'none'} ${(border == null ? void 0 : border.color) || 'transparent'};font-weight:500;font-size:${fontSize};-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;text-transform:capitalize;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;white-space:nowrap;-webkit-transition:all 250ms ease;transition:all 250ms ease;position:relative;overflow:hidden;color:${color};cursor:${cursor};pointer-events:${events};box-shadow:${shadowColor};--next-ui-button-border-radius:${radius};--next-ui-button-padding:${padding};--next-ui-button-height:${height};--next-ui-button-color:${color};--next-ui-button-bg:${bg};}.button.__jsx-style-dynamic-selector:before{content:'';background:${hover == null ? void 0 : hover.bg};position:absolute;top:0;left:0;height:100%;width:100%;border-radius:${radius};-webkit-transition:all 0.2s ease;transition:all 0.2s ease;z-index:1;opacity:0;}.button.__jsx-style-dynamic-selector:hover.__jsx-style-dynamic-selector:before{opacity:${hoverBeforeOpacity};}.button.__jsx-style-dynamic-selector:not(.disabled):active{-webkit-transform:${animated ? 'scale(0.97)' : 'none'};-ms-transform:${animated ? 'scale(0.97)' : 'none'};transform:${animated ? 'scale(0.97)' : 'none'};}.button.__jsx-style-dynamic-selector:hover,.button.__jsx-style-dynamic-selector:focus{background:${(hover == null ? void 0 : hover.bg) || 'inherit'};--next-ui-button-color:${hover == null ? void 0 : hover.color};-webkit-filter:${(hover == null ? void 0 : (_hover$style2 = hover.style) == null ? void 0 : _hover$style2.filter) || 'none'};filter:${(hover == null ? void 0 : (_hover$style3 = hover.style) == null ? void 0 : _hover$style3.filter) || 'none'};color:${hover == null ? void 0 : hover.color};border-color:${(hover == null ? void 0 : (_hover$border3 = hover.border) == null ? void 0 : _hover$border3.color) || 'transparent'};border-width:${hover == null ? void 0 : (_hover$border4 = hover.border) == null ? void 0 : _hover$border4.width};padding:${hover == null ? void 0 : hover.padding} !important;cursor:${cursor};pointer-events:${events};}.text.__jsx-style-dynamic-selector{position:relative;z-index:1;-webkit-transform:translateY( -${bordered || ghost ? (border == null ? void 0 : border.width) || '2px' : '0'} );-ms-transform:translateY( -${bordered || ghost ? (border == null ? void 0 : border.width) || '2px' : '0'} );transform:translateY( -${bordered || ghost ? (border == null ? void 0 : border.width) || '2px' : '0'} );display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;line-height:inherit;padding:0 ${paddingForBorderedGradient};opacity:${loading ? 0 : 1};}.text.__jsx-style-dynamic-selector p.__jsx-style-dynamic-selector,.text.__jsx-style-dynamic-selector pre.__jsx-style-dynamic-selector,.text.__jsx-style-dynamic-selector div.__jsx-style-dynamic-selector{margin:0;}.text.left.__jsx-style-dynamic-selector{padding-left:${paddingForAutoMode};}.text.right.__jsx-style-dynamic-selector{padding-right:${paddingForAutoMode};}`
    }), focusStyles]
  });
});

if (_assertion.__DEV__) {
  Button.displayName = 'NextUI - Button';
}

Button.defaultProps = defaultProps;
var _default = Button;
exports.default = _default;
module.exports = exports.default;