import React, { PropsWithoutRef, RefAttributes } from 'react';
import { NormalColors, NormalWeights, SimpleColors } from '../utils/prop-types';
import CardHeader from './card-header';
import CardFooter from './card-footer';
import CardBody from './card-body';
import Image from '../image';
interface Props {
    shadow?: boolean;
    bordered?: boolean;
    animated?: boolean;
    hoverable?: boolean;
    clickable?: boolean;
    cover?: boolean;
    className?: string;
    width?: string;
    height?: string;
    color?: NormalColors | string;
    textColor?: SimpleColors | string;
    borderWeight?: NormalWeights;
    onClick?: React.MouseEventHandler<HTMLDivElement>;
}
declare const defaultProps: {
    color: string;
    textColor: string;
    bordered: boolean;
    cover: boolean;
    animated: boolean;
    clickable: boolean;
    hoverable: boolean;
    shadow: boolean;
    borderWeight: "light" | "normal" | "bold";
    width: string;
    height: string;
    className: string;
};
declare type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
export declare type CardProps = Props & typeof defaultProps & NativeAttrs;
declare type CardComponent<T, P = {}> = React.ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> & {
    Header: typeof CardHeader;
    Body: typeof CardBody;
    Footer: typeof CardFooter;
    Image: typeof Image;
};
declare type ComponentProps = Partial<typeof defaultProps> & Omit<Props, keyof typeof defaultProps> & NativeAttrs;
declare const _default: CardComponent<HTMLDivElement, ComponentProps>;
export default _default;
