"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _react = _interopRequireWildcard(require("react"));

var _withDefaults = _interopRequireDefault(require("../utils/with-defaults"));

var _useTheme = _interopRequireDefault(require("../use-theme"));

var _collapseContext = require("./collapse-context");

var _useCurrentState = _interopRequireDefault(require("../use-current-state"));

var _collections = require("../utils/collections");

var _dimensions = require("../utils/dimensions");

var _clsx = _interopRequireDefault(require("../utils/clsx"));

var _collapse = _interopRequireDefault(require("./collapse"));

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const defaultProps = {
  accordion: true,
  shadow: false,
  bordered: false,
  splitted: false,
  borderWeight: 'light',
  className: ''
};

const CollapseGroup = ({
  children,
  accordion,
  shadow,
  className,
  animated,
  bordered,
  splitted,
  divider,
  borderWeight: borderWeightProp,
  onChange,
  ...props
}) => {
  const theme = (0, _useTheme.default)();
  const [state, setState, stateRef] = (0, _useCurrentState.default)([]);

  const updateValues = (currentIndex, nextState) => {
    const hasChild = stateRef.current.find(val => val === currentIndex);
    onChange && onChange(currentIndex, nextState);

    if (accordion) {
      if (nextState) return setState([currentIndex]);
      return setState([]);
    }

    if (nextState) {
      // In a few cases, the user will set Collapse Component state manually.
      // If the user incorrectly set the state, Group component should ignore it.

      /* istanbul ignore if */
      if (hasChild) return;
      return setState([...stateRef.current, currentIndex]);
    }

    setState(stateRef.current.filter(item => item !== currentIndex));
  };

  const bgColor = (0, _react.useMemo)(() => theme.type === 'dark' ? theme.palette.accents_1 : theme.palette.background, [theme.type]);
  const initialValue = (0, _react.useMemo)(() => ({
    values: state,
    updateValues,
    divider,
    animated
  }), [state.join(',')]);
  const hasIndexChildren = (0, _react.useMemo)(() => (0, _collections.setChildrenIndex)(children, [_collapse.default]), [children]);
  const borderWeight = (0, _react.useMemo)(() => {
    return bordered ? (0, _dimensions.getNormalWeight)(borderWeightProp) : '0px';
  }, [bordered, borderWeightProp]);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_collapseContext.CollapseContext.Provider, {
    value: initialValue,
    children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", { ...props,
      className: _style.default.dynamic([["2642035014", [theme.layout.gapHalf, theme.layout.radius, theme.layout.gap, bgColor, theme.expressiveness.shadowMedium, bgColor, theme.expressiveness.shadowMedium, theme.layout.gapHalf, borderWeight, theme.palette.border]]]) + " " + (props && props.className != null && props.className || (0, _clsx.default)('collapse-group', {
        shadow,
        bordered,
        splitted
      }, className) || ""),
      children: [hasIndexChildren, /*#__PURE__*/(0, _jsxRuntime.jsx)(_style.default, {
        id: "2642035014",
        dynamic: [theme.layout.gapHalf, theme.layout.radius, theme.layout.gap, bgColor, theme.expressiveness.shadowMedium, bgColor, theme.expressiveness.shadowMedium, theme.layout.gapHalf, borderWeight, theme.palette.border],
        children: `.collapse-group.__jsx-style-dynamic-selector{width:auto;padding:0 ${theme.layout.gapHalf};}.collapse-group.__jsx-style-dynamic-selector>div + div{border-top:none;}.shadow.__jsx-style-dynamic-selector,.bordered.__jsx-style-dynamic-selector,.collapse-group.splitted.__jsx-style-dynamic-selector .collapse{border-radius:${theme.layout.radius};padding:0 ${theme.layout.gap};}.shadow.__jsx-style-dynamic-selector{border:none;background:${bgColor};box-shadow:${theme.expressiveness.shadowMedium};}.collapse-group.splitted.__jsx-style-dynamic-selector .collapse{border:none;background:${bgColor};box-shadow:${theme.expressiveness.shadowMedium};margin:${theme.layout.gapHalf} 0;}.bordered.__jsx-style-dynamic-selector{border:${borderWeight} solid ${theme.palette.border};}.collapse-group.__jsx-style-dynamic-selector .collapse:last-child{border-bottom:none;}.collapse-group.__jsx-style-dynamic-selector .collapse:first-child{border-top:none;}.gradient.vertical.__jsx-style-dynamic-selector .button:not(:last-child):not(:first-child){padding-top:0 !important;}`
      })]
    })
  });
};

var _default = (0, _withDefaults.default)(CollapseGroup, defaultProps);

exports.default = _default;
module.exports = exports.default;