import React from 'react';
import CollapseGroup from './collapse-group';
import { NormalWeights } from '../utils/prop-types';
interface Props {
    title: React.ReactNode | string;
    subtitle?: React.ReactNode | string;
    divider?: boolean;
    animated?: boolean;
    bordered?: boolean;
    borderWeight?: NormalWeights;
    arrowIcon?: React.ReactNode;
    contentLeft?: React.ReactNode;
    initialExpanded?: boolean;
    showArrow?: boolean;
    shadow?: boolean;
    className?: string;
    index?: number;
    disabled?: boolean;
    onChange?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>, index?: number | undefined, value?: boolean) => void;
}
declare const defaultProps: {
    className: string;
    shadow: boolean;
    divider: boolean;
    bordered: boolean;
    showArrow: boolean;
    animated: boolean;
    disabled: boolean;
    borderWeight: "light" | "normal" | "bold";
    initialExpanded: boolean;
};
declare type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
export declare type CollapseProps = Props & typeof defaultProps & NativeAttrs;
declare type CollapseComponent<P = {}> = React.FC<P> & {
    Group: typeof CollapseGroup;
};
declare type ComponentProps = Partial<typeof defaultProps> & Omit<Props, keyof typeof defaultProps> & NativeAttrs;
declare const _default: CollapseComponent<ComponentProps>;
export default _default;
