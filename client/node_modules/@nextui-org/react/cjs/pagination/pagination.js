"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _react = _interopRequireWildcard(require("react"));

var _styles = require("./styles");

var _usePagination = _interopRequireWildcard(require("../use-pagination"));

var _paginationItem = _interopRequireDefault(require("./pagination-item"));

var _paginationEllipsis = _interopRequireDefault(require("./pagination-ellipsis"));

var _paginationIcon = _interopRequireDefault(require("./pagination-icon"));

var _paginationHighlight = _interopRequireDefault(require("./pagination-highlight"));

var _useTheme = _interopRequireDefault(require("../use-theme"));

var _clsx = _interopRequireDefault(require("../utils/clsx"));

var _color = require("../utils/color");

var _assertion = require("../utils/assertion");

var _dimensions = require("../utils/dimensions");

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const defaultProps = {
  color: 'primary',
  size: 'medium',
  borderWeight: 'normal',
  shadow: false,
  rounded: false,
  controls: true,
  bordered: false,
  onlyDots: false,
  noMargin: false,
  initialPage: 1,
  siblings: 1,
  boundaries: 1,
  dotsJump: 5,
  total: 1,
  loop: false,
  animated: true
};

const Pagination = ({
  page,
  initialPage,
  total,
  size,
  color,
  loop,
  siblings,
  boundaries,
  shadow,
  rounded,
  animated,
  bordered,
  borderWeight,
  onlyDots,
  dotsJump,
  controls,
  noMargin,
  onChange,
  ...props
}) => {
  const {
    range,
    active,
    setPage,
    previous,
    next,
    first,
    last
  } = (0, _usePagination.default)({
    page,
    initialPage,
    siblings: onlyDots ? 10 : siblings,
    boundaries: onlyDots ? 10 : boundaries,
    total,
    onChange
  });
  const theme = (0, _useTheme.default)();
  const bgColor = (0, _react.useMemo)(() => (0, _color.getNormalColor)(color, theme.palette, theme.palette.primary), [color, theme.palette]);
  const {
    font,
    width
  } = (0, _react.useMemo)(() => (0, _styles.getPaginationSizes)(size), [size]);
  const radius = (0, _react.useMemo)(() => noMargin ? '0px' : rounded || onlyDots ? '100%' : '33%', [rounded, onlyDots, noMargin]);
  const weight = (0, _react.useMemo)(() => bordered ? (0, _dimensions.getNormalWeight)(borderWeight) : '0px', [bordered, borderWeight]);
  const renderItem = (0, _react.useCallback)((value, index) => {
    if (value === _usePagination.DOTS) {
      const isBefore = index < range.indexOf(active);
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_paginationEllipsis.default, {
        value: value,
        bordered: bordered,
        animated: animated,
        isBefore: isBefore,
        onlyDots: onlyDots,
        onClick: () => isBefore ? setPage(active - dotsJump >= 1 ? active - dotsJump : 1) : setPage(active + dotsJump <= total ? active + dotsJump : total)
      }, `pagination-item-${value}-${index}`);
    }

    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_paginationItem.default, {
      value: value,
      animated: animated,
      bordered: bordered,
      active: value === active,
      onClick: () => setPage(value),
      onlyDots: onlyDots,
      children: value
    }, `pagination-item-${value}-${index}`);
  }, [total, onlyDots, active, bordered, animated]);

  const handleNext = () => {
    if (loop && active === total) {
      return first();
    }

    return next();
  };

  const handlePrevious = () => {
    if (loop && active === 1) {
      return last();
    }

    return previous();
  };

  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("nav", { ...props,
    className: _style.default.dynamic([["2109028265", [font, radius, weight, noMargin ? '0' : '2px', bgColor, onlyDots ? `calc(${width} / 2)` : width, font, onlyDots ? 0.8 : 0.9]]]) + " " + (props && props.className != null && props.className || (0, _clsx.default)('pagination', {
      'no-margin': noMargin,
      bordered
    }) || ""),
    children: [controls && /*#__PURE__*/(0, _jsxRuntime.jsx)(_paginationIcon.default, {
      isPrev: true,
      bordered: bordered,
      animated: animated,
      onlyDots: onlyDots,
      onClick: handlePrevious,
      disabled: !loop && active === 1
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_paginationHighlight.default, {
      noMargin: noMargin,
      animated: animated,
      color: bgColor,
      shadow: shadow,
      active: controls ? range.indexOf(active) + 1 : range.indexOf(active)
    }), range.map(renderItem), controls && /*#__PURE__*/(0, _jsxRuntime.jsx)(_paginationIcon.default, {
      bordered: bordered,
      animated: animated,
      onlyDots: onlyDots,
      onClick: handleNext,
      disabled: !loop && active === total
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_style.default, {
      id: "2109028265",
      dynamic: [font, radius, weight, noMargin ? '0' : '2px', bgColor, onlyDots ? `calc(${width} / 2)` : width, font, onlyDots ? 0.8 : 0.9],
      children: `.pagination.__jsx-style-dynamic-selector{margin:0;padding:0;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;position:relative;font-variant:tabular-nums;font-feature-settings:'tnum';font-size:${font};--next-ui-pagination-item-radius:${radius};--next-ui-pagination-item-border-weight:${weight};--next-ui-pagination-item-margin:${noMargin ? '0' : '2px'};--next-ui-pagination-item-color:${bgColor};--next-ui-pagination-size:${onlyDots ? `calc(${width} / 2)` : width};--next-ui-pagination-font-size:${font};--next-ui-pagination-scale-transform:${onlyDots ? 0.8 : 0.9};}.pagination.__jsx-style-dynamic-selector button:last-of-type{margin-right:0;}.no-margin.__jsx-style-dynamic-selector button:first-of-type{border-top-left-radius:33%;border-bottom-left-radius:33%;}.no-margin.__jsx-style-dynamic-selector button:last-of-type{border-top-right-radius:33%;border-bottom-right-radius:33%;}.no-margin.bordered.__jsx-style-dynamic-selector button:not(:last-child){border-right:0;}`
    })]
  });
};

Pagination.defaultProps = defaultProps;

if (_assertion.__DEV__) {
  Pagination.displayName = 'NextUI - Pagination';
}

var _default = /*#__PURE__*/_react.default.memo(Pagination);

exports.default = _default;
module.exports = exports.default;