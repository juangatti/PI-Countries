"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _react = _interopRequireWildcard(require("react"));

var _clsx = _interopRequireDefault(require("../utils/clsx"));

var _useTheme = _interopRequireDefault(require("../use-theme"));

var _clearIcon = _interopRequireDefault(require("../utils/clear-icon"));

var _color = require("../utils/color");

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const InputIconClear = ({
  onClick,
  heightRatio,
  status,
  disabled,
  visible,
  underlined,
  hasContentRight,
  ...props
}) => {
  const theme = (0, _useTheme.default)();
  const isDark = theme.type === 'dark';
  const width = (0, _react.useMemo)(() => {
    return heightRatio ? `calc(10.66px * ${heightRatio})` : '18px';
  }, [heightRatio]);
  const color = (0, _react.useMemo)(() => status === 'default' ? isDark ? theme.palette.accents_6 : theme.palette.accents_3 : (0, _color.getNormalColor)(status, theme.palette), [status, isDark, theme.palette]);

  const clickHandler = event => {
    event.preventDefault();
    event.stopPropagation();
    event.nativeEvent.stopImmediatePropagation();
    onClick && onClick(event);
  };

  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    onClick: clickHandler,
    ...props,
    className: _style.default.dynamic([["2364806577", [underlined ? '2px' : theme.layout.gapHalf, disabled ? 'not-allowed' : 'pointer', color, disabled ? theme.palette.accents_3 : theme.palette.foreground, width, width]]]) + " " + (props && props.className != null && props.className || (0, _clsx.default)('clear-icon', {
      visible,
      'dark-theme': isDark,
      underlined: underlined,
      'has-content-right': hasContentRight
    }) || ""),
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_clearIcon.default, {
      fill: "currentColor"
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_style.default, {
      id: "2364806577",
      dynamic: [underlined ? '2px' : theme.layout.gapHalf, disabled ? 'not-allowed' : 'pointer', color, disabled ? theme.palette.accents_3 : theme.palette.foreground, width, width],
      children: `.clear-icon.__jsx-style-dynamic-selector{position:absolute;right:0;margin:0;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:auto;padding:0 ${underlined ? '2px' : theme.layout.gapHalf};cursor:${disabled ? 'not-allowed' : 'pointer'};box-sizing:border-box;-webkit-transition:color 250ms ease 0s,-webkit-transform 250ms ease 0s;-webkit-transition:color 250ms ease 0s,transform 250ms ease 0s;transition:color 250ms ease 0s,transform 250ms ease 0s;color:${color};visibility:hidden;-webkit-transform:translateX(20%);-ms-transform:translateX(20%);transform:translateX(20%);opacity:0;}.has-content-right.__jsx-style-dynamic-selector{padding:0;position:relative;-webkit-transform:translateX(30%);-ms-transform:translateX(30%);transform:translateX(30%);}.visible.__jsx-style-dynamic-selector{visibility:visible;-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);opacity:1;}.clear-icon.__jsx-style-dynamic-selector:hover{color:${disabled ? theme.palette.accents_3 : theme.palette.foreground};}.clear-icon.__jsx-style-dynamic-selector svg{color:currentColor;width:${width};height:${width};}`
    })]
  });
};

const MemoInputIconClear = /*#__PURE__*/_react.default.memo(InputIconClear);

var _default = MemoInputIconClear;
exports.default = _default;
module.exports = exports.default;