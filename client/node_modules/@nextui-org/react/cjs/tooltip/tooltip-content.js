"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _react = _interopRequireWildcard(require("react"));

var _reactDom = require("react-dom");

var _useTheme = _interopRequireDefault(require("../use-theme"));

var _usePortal = _interopRequireDefault(require("../use-portal"));

var _useResize = _interopRequireDefault(require("../use-resize"));

var _cssTransition = _interopRequireDefault(require("../utils/css-transition"));

var _useClickAnywhere = _interopRequireDefault(require("../use-click-anywhere"));

var _styles = require("./styles");

var _placement = require("./placement");

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const defaultRect = {
  top: -1000,
  left: -1000,
  right: -1000,
  bottom: -1000,
  width: 0,
  height: 0
};

const getRect = ref => {
  if (!ref || !ref.current) return defaultRect;
  const rect = ref.current.getBoundingClientRect();
  return { ...rect,
    width: rect.width || rect.right - rect.left,
    height: rect.height || rect.bottom - rect.top,
    top: rect.top + document.documentElement.scrollTop,
    bottom: rect.bottom + document.documentElement.scrollTop,
    left: rect.left + document.documentElement.scrollLeft,
    right: rect.right + document.documentElement.scrollLeft
  };
};

const TooltipContent = ({
  children,
  parent,
  visible,
  offset,
  placement,
  color,
  contentColor,
  rounded,
  className,
  hideArrow,
  shadow,
  ...props
}) => {
  const theme = (0, _useTheme.default)();
  const el = (0, _usePortal.default)('tooltip');
  const selfRef = (0, _react.useRef)(null);
  const [rect, setRect] = (0, _react.useState)(_placement.defaultTooltipPlacement);
  const colors = (0, _react.useMemo)(() => (0, _styles.getColors)(color, contentColor, theme.palette), [color, contentColor, theme.palette]);
  if (!parent) return null;

  const updateRect = () => {
    const pos = (0, _placement.getPlacement)(placement, getRect(parent), offset);
    setRect(pos);
  };

  const {
    transform,
    top,
    left,
    right,
    bottom
  } = (0, _react.useMemo)(() => (0, _placement.getIconPlacement)(placement, 5), [placement]);
  const borderRadius = (0, _react.useMemo)(() => rounded ? '20px' : theme.layout.radius, [rounded]);
  (0, _useResize.default)(updateRect);
  (0, _useClickAnywhere.default)(() => updateRect());
  (0, _react.useEffect)(() => {
    updateRect();
  }, [visible]);

  const preventHandler = event => {
    event.stopPropagation();
    event.nativeEvent.stopImmediatePropagation();
  };

  if (!el) return null;
  return /*#__PURE__*/(0, _reactDom.createPortal)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_cssTransition.default, {
    name: "wrapper",
    visible: visible,
    enterTime: 20,
    leaveTime: 20,
    children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      ref: selfRef,
      onClick: preventHandler,
      ...props,
      className: _style.default.dynamic([["1431256522", [rect.top, rect.left, rect.transform, colors.bgColor, colors.color, borderRadius, theme.layout.gapQuarter, theme.layout.gapHalf, shadow ? theme.expressiveness.shadowMedium : 'none', colors.bgColor, left, top, right, bottom, transform, rect.top]]]) + " " + (props && props.className != null && props.className || `tooltip-content ${className}`),
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        role: "tooltip",
        className: _style.default.dynamic([["1431256522", [rect.top, rect.left, rect.transform, colors.bgColor, colors.color, borderRadius, theme.layout.gapQuarter, theme.layout.gapHalf, shadow ? theme.expressiveness.shadowMedium : 'none', colors.bgColor, left, top, right, bottom, transform, rect.top]]]) + " " + `inner ${!hideArrow ? 'arrow' : ''}`,
        children: children
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_style.default, {
        id: "1431256522",
        dynamic: [rect.top, rect.left, rect.transform, colors.bgColor, colors.color, borderRadius, theme.layout.gapQuarter, theme.layout.gapHalf, shadow ? theme.expressiveness.shadowMedium : 'none', colors.bgColor, left, top, right, bottom, transform, rect.top],
        children: `.tooltip-content.__jsx-style-dynamic-selector{position:absolute;width:auto;top:calc(${rect.top} + 6px);left:${rect.left};-webkit-transform:${rect.transform};-ms-transform:${rect.transform};transform:${rect.transform};background:${colors.bgColor};color:${colors.color};border-radius:${borderRadius};padding:${theme.layout.gapQuarter} ${theme.layout.gapHalf};opacity:0;z-index:1000;box-shadow:${shadow ? theme.expressiveness.shadowMedium : 'none'};-webkit-transition:opacity 0.25s ease 0s,top 0.25s ease 0s;transition:opacity 0.25s ease 0s,top 0.25s ease 0s;}.inner.__jsx-style-dynamic-selector{position:relative;font-size:0.875rem;padding:0;}.inner.arrow.__jsx-style-dynamic-selector:after{content:'';width:10px;height:10px;z-index:-2;background:${colors.bgColor};border-radius:0px 0px 2px 0px;position:absolute;left:${left};top:${top};right:${right};bottom:${bottom};-webkit-transform:${transform};-ms-transform:${transform};transform:${transform};}.wrapper-enter-active.__jsx-style-dynamic-selector{opacity:1;top:${rect.top};}`
      })]
    })
  }), el);
};

var _default = TooltipContent;
exports.default = _default;
module.exports = exports.default;