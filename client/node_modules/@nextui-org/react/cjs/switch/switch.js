"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _react = _interopRequireWildcard(require("react"));

var _withDefaults = _interopRequireDefault(require("../utils/with-defaults"));

var _useTheme = _interopRequireDefault(require("../use-theme"));

var _color = require("../utils/color");

var _styles = require("./styles");

var _useWarning = _interopRequireDefault(require("../use-warning"));

var _useKeyboard = _interopRequireWildcard(require("../use-keyboard"));

var _styles2 = require("../utils/styles");

var _assertion = require("../utils/assertion");

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const defaultProps = {
  color: 'primary',
  size: 'medium',
  disabled: false,
  bordered: false,
  squared: false,
  initialChecked: false,
  className: ''
};

const Switch = ({
  initialChecked,
  checked,
  disabled,
  onChange,
  size,
  squared,
  bordered,
  color,
  icon,
  iconOn,
  iconOff,
  className,
  ...props
}) => {
  const theme = (0, _useTheme.default)();
  const [selfChecked, setSelfChecked] = (0, _react.useState)(initialChecked);
  const {
    width,
    height
  } = (0, _react.useMemo)(() => (0, _styles.getSizes)(size), [size]);

  if (icon && _assertion.__DEV__ && (iconOn || iconOff)) {
    (0, _useWarning.default)('Remove props "icon" if iconOn or iconOff exists.', 'Switch');
  }

  const changeHandle = (0, _react.useCallback)(ev => {
    if (disabled) return;
    const selfEvent = {
      target: {
        checked: !selfChecked
      },
      stopPropagation: ev.stopPropagation,
      preventDefault: ev.preventDefault,
      nativeEvent: ev
    };
    setSelfChecked(!selfChecked);
    onChange && onChange(selfEvent);
  }, [disabled, selfChecked, onChange]);
  const {
    bindings
  } = (0, _useKeyboard.default)(event => {
    changeHandle(event);
  }, [_useKeyboard.KeyCode.Enter, _useKeyboard.KeyCode.Space], {
    disableGlobalEvent: true
  });
  const {
    className: focusClassName,
    styles: focusStyles
  } = (0, _styles2.getFocusStyles)(theme);
  const radius = (0, _react.useMemo)(() => squared ? '2px' : '50%', [squared]);
  const circleIcon = (0, _react.useMemo)(() => {
    const hasIcon = icon || iconOn || iconOff;
    const hasIconOn = Boolean(iconOn);
    const hasIconOff = Boolean(iconOff);
    if (!hasIcon) return null;
    if (hasIconOn && selfChecked) return iconOn;
    if (hasIconOff && !selfChecked) return iconOff;
    return hasIcon;
  }, [selfChecked, icon, iconOn, iconOff]);
  const switchColor = (0, _react.useMemo)(() => disabled ? theme.palette.accents_4 : (0, _color.getNormalColor)(color, theme.palette, theme.palette.success), [color, disabled, theme.palette]);
  (0, _react.useEffect)(() => {
    if (checked === undefined) return;
    setSelfChecked(checked);
  }, [checked]);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("label", { ...props,
    className: _style.default.dynamic([["1549510398", [width, disabled ? 'not-allowed' : 'pointer', height, width, height, squared ? '2px' : height, theme.layout.stroke, bordered ? theme.palette.border : 'transparent', bordered ? 'transparent' : theme.palette.accents_2, height, height, bordered ? 'calc(1px + ' + height + '* 0.02)' : '0px', radius, bordered ? theme.palette.accents_2 : theme.palette.background, theme.palette.accents_3, theme.palette.accents_3, switchColor, height, height, width, height, (0, _color.isHex)(theme.palette.background) ? (0, _color.hexToRGBA)(theme.palette.background, 0.6) : theme.palette.background, theme.palette.accents_2]]]) + " " + (props && props.className != null && props.className || `${className}`),
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
      tabIndex: -1,
      type: "checkbox",
      disabled: disabled,
      checked: selfChecked,
      onChange: changeHandle,
      className: _style.default.dynamic([["1549510398", [width, disabled ? 'not-allowed' : 'pointer', height, width, height, squared ? '2px' : height, theme.layout.stroke, bordered ? theme.palette.border : 'transparent', bordered ? 'transparent' : theme.palette.accents_2, height, height, bordered ? 'calc(1px + ' + height + '* 0.02)' : '0px', radius, bordered ? theme.palette.accents_2 : theme.palette.background, theme.palette.accents_3, theme.palette.accents_3, switchColor, height, height, width, height, (0, _color.isHex)(theme.palette.background) ? (0, _color.hexToRGBA)(theme.palette.background, 0.6) : theme.palette.background, theme.palette.accents_2]]])
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      role: "switch",
      tabIndex: disabled ? -1 : 0,
      "aria-checked": selfChecked,
      "aria-disabled": disabled,
      ...bindings,
      className: _style.default.dynamic([["1549510398", [width, disabled ? 'not-allowed' : 'pointer', height, width, height, squared ? '2px' : height, theme.layout.stroke, bordered ? theme.palette.border : 'transparent', bordered ? 'transparent' : theme.palette.accents_2, height, height, bordered ? 'calc(1px + ' + height + '* 0.02)' : '0px', radius, bordered ? theme.palette.accents_2 : theme.palette.background, theme.palette.accents_3, theme.palette.accents_3, switchColor, height, height, width, height, (0, _color.isHex)(theme.palette.background) ? (0, _color.hexToRGBA)(theme.palette.background, 0.6) : theme.palette.background, theme.palette.accents_2]]]) + " " + (bindings && bindings.className != null && bindings.className || `switch ${selfChecked ? 'checked' : ''} ${disabled ? 'disabled' : ''} ${focusClassName}`),
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
        className: _style.default.dynamic([["1549510398", [width, disabled ? 'not-allowed' : 'pointer', height, width, height, squared ? '2px' : height, theme.layout.stroke, bordered ? theme.palette.border : 'transparent', bordered ? 'transparent' : theme.palette.accents_2, height, height, bordered ? 'calc(1px + ' + height + '* 0.02)' : '0px', radius, bordered ? theme.palette.accents_2 : theme.palette.background, theme.palette.accents_3, theme.palette.accents_3, switchColor, height, height, width, height, (0, _color.isHex)(theme.palette.background) ? (0, _color.hexToRGBA)(theme.palette.background, 0.6) : theme.palette.background, theme.palette.accents_2]]]) + " " + "circle",
        children: circleIcon
      })
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_style.default, {
      id: "1549510398",
      dynamic: [width, disabled ? 'not-allowed' : 'pointer', height, width, height, squared ? '2px' : height, theme.layout.stroke, bordered ? theme.palette.border : 'transparent', bordered ? 'transparent' : theme.palette.accents_2, height, height, bordered ? 'calc(1px + ' + height + '* 0.02)' : '0px', radius, bordered ? theme.palette.accents_2 : theme.palette.background, theme.palette.accents_3, theme.palette.accents_3, switchColor, height, height, width, height, (0, _color.isHex)(theme.palette.background) ? (0, _color.hexToRGBA)(theme.palette.background, 0.6) : theme.palette.background, theme.palette.accents_2],
      children: `label.__jsx-style-dynamic-selector{-webkit-tap-highlight-color:transparent;display:inline-block;vertical-align:center;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;max-width:${width};-webkit-transition:all 0.25s ease;transition:all 0.25s ease;padding:3px 0;position:relative;cursor:${disabled ? 'not-allowed' : 'pointer'};}input.__jsx-style-dynamic-selector{overflow:hidden;height:${height};opacity:0;width:100%;position:absolute;background:transparent;z-index:-1;}.switch.__jsx-style-dynamic-selector{width:${width};height:${height};border-radius:${squared ? '2px' : height};opacity:1;-webkit-transition:all 0.25s ease;transition:all 0.25s ease;position:relative;border:${theme.layout.stroke} solid ${bordered ? theme.palette.border : 'transparent'};background:${bordered ? 'transparent' : theme.palette.accents_2};box-shadow:inset 0 0 4px 0 rgb(0 0 0 / 5%);padding:0;}.circle.__jsx-style-dynamic-selector{position:absolute;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:calc(${height} * 0.76);height:calc(${height} * 0.76);-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;top:49.4%;bottom:0px;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);left:${bordered ? 'calc(1px + ' + height + '* 0.02)' : '0px'};box-shadow:0px 4px 4px 0 rgb(0 0 0 / 25%);-webkit-transition:left 0.25s ease;transition:left 0.25s ease;border-radius:${radius};background:${bordered ? theme.palette.accents_2 : theme.palette.background};}.switch.checked.__jsx-style-dynamic-selector:hover{opacity:0.8;}.switch.__jsx-style-dynamic-selector:hover.__jsx-style-dynamic-selector:not(.checked){opacity:0.8;}.disabled.__jsx-style-dynamic-selector{border-color:${theme.palette.accents_3};background-color:${theme.palette.accents_3};}.checked.__jsx-style-dynamic-selector{border:1px solid transparent;background:${switchColor};}.circle.__jsx-style-dynamic-selector svg{background:transparent;height:calc(${height} * 0.44);width:calc(${height} * 0.44);}.checked.__jsx-style-dynamic-selector>.circle.__jsx-style-dynamic-selector{left:calc(${width} - ${height} * 0.88);background:${(0, _color.isHex)(theme.palette.background) ? (0, _color.hexToRGBA)(theme.palette.background, 0.6) : theme.palette.background};}.disabled.__jsx-style-dynamic-selector>.circle.__jsx-style-dynamic-selector{background:${theme.palette.accents_2};}`
    }), focusStyles]
  });
};

const MemoSwitch = /*#__PURE__*/_react.default.memo(Switch);

var _default = (0, _withDefaults.default)(MemoSwitch, defaultProps);

exports.default = _default;
module.exports = exports.default;