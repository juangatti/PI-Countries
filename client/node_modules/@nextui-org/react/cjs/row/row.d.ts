import React from 'react';
import { Justify, AlignItems, Wrap } from '../utils/prop-types';
interface Props {
    gap?: number;
    fluid?: boolean;
    wrap?: Wrap;
    justify?: Justify;
    align?: AlignItems;
    as?: keyof JSX.IntrinsicElements;
    className?: string;
}
declare const defaultProps: {
    gap: number;
    fluid: boolean;
    wrap: "nowrap" | "wrap" | "wrap-reverse";
    justify: "center" | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly";
    align: "center" | "flex-start" | "flex-end" | "stretch" | "baseline";
    as: keyof JSX.IntrinsicElements;
    className: string;
};
declare type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
export declare type RowProps = Props & typeof defaultProps & NativeAttrs;
declare const _default: React.ComponentType<Partial<{
    gap: number;
    fluid: boolean;
    wrap: "nowrap" | "wrap" | "wrap-reverse";
    justify: "center" | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly";
    align: "center" | "flex-start" | "flex-end" | "stretch" | "baseline";
    as: keyof JSX.IntrinsicElements;
    className: string;
}> & Omit<RowProps, "wrap" | "as" | "className" | "justify" | "gap" | "fluid" | "align">>;
export default _default;
