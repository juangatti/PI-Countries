"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _react = _interopRequireDefault(require("react"));

var _useTheme = _interopRequireDefault(require("../use-theme"));

var _clearIcon = _interopRequireDefault(require("../utils/clear-icon"));

var _jsxRuntime = require("react/jsx-runtime");

const ModalCloseButton = ({
  onClick,
  disabled,
  ...props
}) => {
  const theme = (0, _useTheme.default)();

  const clickHandler = event => {
    event.preventDefault();
    event.stopPropagation();
    event.nativeEvent.stopImmediatePropagation();
    onClick && onClick(event);
  };

  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    onClick: clickHandler,
    ...props,
    className: _style.default.dynamic([["1382096932", [theme.layout.gapQuarter, theme.layout.gapQuarter, disabled ? 'not-allowed' : 'pointer', theme.layout.gapQuarter, theme.palette.accents_4]]]) + " " + (props && props.className != null && props.className || "close-icon"),
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_clearIcon.default, {
      plain: true,
      size: 18,
      fill: "currentColor"
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_style.default, {
      id: "1382096932",
      dynamic: [theme.layout.gapQuarter, theme.layout.gapQuarter, disabled ? 'not-allowed' : 'pointer', theme.layout.gapQuarter, theme.palette.accents_4],
      children: `.close-icon.__jsx-style-dynamic-selector{position:absolute;z-index:1;top:${theme.layout.gapQuarter};right:calc(${theme.layout.gapQuarter} * 0.5);margin:0;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:auto;cursor:${disabled ? 'not-allowed' : 'pointer'};box-sizing:border-box;-webkit-transition:opacity 250ms ease 0s;transition:opacity 250ms ease 0s;padding:${theme.layout.gapQuarter};color:${theme.palette.accents_4};}.close-icon.__jsx-style-dynamic-selector:hover{opacity:0.8;}.close-icon.__jsx-style-dynamic-selector svg{color:currentColor;}`
    })]
  });
};

const MemoModalCloseButton = /*#__PURE__*/_react.default.memo(ModalCloseButton);

var _default = MemoModalCloseButton;
exports.default = _default;
module.exports = exports.default;