import React from 'react';
import { NormalColors, NormalSizes } from '../utils/prop-types';
interface Props {
    value: number;
    striped?: boolean;
    animated?: boolean;
    squared?: boolean;
    indeterminated?: boolean;
    shadow?: boolean;
    max?: number;
    min?: number;
    color?: NormalColors | string;
    status?: NormalColors | string;
    size?: NormalSizes;
    className?: string;
}
declare const defaultProps: {
    color: string;
    status: string;
    size: "mini" | "small" | "medium" | "large" | "xlarge";
    striped: boolean;
    animated: boolean;
    squared: boolean;
    shadow: boolean;
    indeterminated: boolean;
    value: number;
    min: number;
    max: number;
    className: string;
};
declare type NativeAttrs = Omit<Partial<React.ProgressHTMLAttributes<unknown> & React.HTMLAttributes<unknown>>, keyof Props>;
export declare type ProgressBarProps = Props & typeof defaultProps & NativeAttrs;
declare const _default: React.ComponentType<Partial<{
    color: string;
    status: string;
    size: "mini" | "small" | "medium" | "large" | "xlarge";
    striped: boolean;
    animated: boolean;
    squared: boolean;
    shadow: boolean;
    indeterminated: boolean;
    value: number;
    min: number;
    max: number;
    className: string;
}> & Omit<Props & {
    color: string;
    status: string;
    size: "mini" | "small" | "medium" | "large" | "xlarge";
    striped: boolean;
    animated: boolean;
    squared: boolean;
    shadow: boolean;
    indeterminated: boolean;
    value: number;
    min: number;
    max: number;
    className: string;
} & NativeAttrs, "value" | "className" | "animated" | "color" | "status" | "size" | "squared" | "max" | "min" | "shadow" | "striped" | "indeterminated">>;
export default _default;
