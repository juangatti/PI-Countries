import React from 'react';
import CheckboxGroup from './checkbox-group';
import { NormalSizes, NormalColors, SimpleColors } from '../utils/prop-types';
interface CheckboxEventTarget {
    checked: boolean;
}
export interface CheckboxEvent {
    target: CheckboxEventTarget;
    stopPropagation: () => void;
    preventDefault: () => void;
    nativeEvent: React.ChangeEvent;
}
export interface Props {
    color?: NormalColors | string;
    textColor?: SimpleColors | string;
    label?: string;
    line?: boolean;
    indeterminate?: boolean;
    rounded?: boolean;
    checked?: boolean;
    disabled?: boolean;
    initialChecked?: boolean;
    onChange?: (e: CheckboxEvent) => void;
    size?: NormalSizes | number;
    className?: string;
    value?: string;
    style?: object;
}
declare const defaultProps: {
    color: "default" | "primary" | "secondary" | "success" | "warning" | "error" | "gradient";
    textColor: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    disabled: boolean;
    initialChecked: boolean;
    indeterminate: boolean;
    rounded: boolean;
    size: number | "mini" | "small" | "medium" | "large" | "xlarge";
    className: string;
    value: string;
};
declare type NativeAttrs = Omit<React.InputHTMLAttributes<unknown>, keyof Props>;
export declare type CheckboxProps = Props & typeof defaultProps & NativeAttrs;
declare type CheckboxComponent<P = {}> = React.FC<P> & {
    Group: typeof CheckboxGroup;
};
declare type ComponentProps = Partial<typeof defaultProps> & Omit<Props, keyof typeof defaultProps> & NativeAttrs;
declare const _default: CheckboxComponent<ComponentProps>;
export default _default;
