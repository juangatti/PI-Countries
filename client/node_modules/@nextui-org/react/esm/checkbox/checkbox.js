import _JSXStyle from "styled-jsx/style";
import React, { useCallback, useEffect, useMemo, useState } from 'react';
import { useCheckbox } from './checkbox-context';
import useWarning from '../use-warning';
import useTheme from '../use-theme';
import { getIconCheckStyle, getCheckboxSize } from './styles';
import { getNormalColor } from '../utils/color';
import { getFocusStyles } from '../utils/styles';
import useKeyboard, { KeyCode } from '../use-keyboard';
import clsx from '../utils/clsx';
import { __DEV__ } from '../utils/assertion';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
const defaultProps = {
  color: 'primary',
  textColor: 'default',
  disabled: false,
  initialChecked: false,
  indeterminate: false,
  rounded: false,
  size: 'medium',
  className: '',
  value: ''
};

const Checkbox = ({
  checked,
  initialChecked,
  line,
  rounded,
  indeterminate,
  disabled,
  onChange,
  className,
  children,
  size,
  label,
  color,
  textColor,
  value,
  style,
  ...props
}) => {
  const [selfChecked, setSelfChecked] = useState(initialChecked);
  const {
    color: groupColor,
    textColor: textGroupColor,
    updateState,
    inGroup,
    disabledAll,
    values
  } = useCheckbox();
  const isDisabled = inGroup ? disabledAll || disabled : disabled;
  const theme = useTheme();
  const radius = rounded ? '50%' : '33%';
  const checkboxColor = useMemo(() => getNormalColor(color || groupColor, theme.palette), [color, groupColor, theme.palette]);
  const {
    className: focusClassName,
    styles: focusStyles
  } = getFocusStyles(theme);
  const labelColor = useMemo(() => isDisabled ? theme.palette.accents_4 : getNormalColor(textColor || textGroupColor, theme.palette, theme.palette.text), [textColor, textGroupColor, isDisabled, theme.palette]);
  const iconCheckStyle = getIconCheckStyle(size, indeterminate);

  if (__DEV__ && inGroup && checked) {
    useWarning('Remove props "checked" when [Checkbox] component is in the group.', 'Checkbox');
  }

  if (inGroup) {
    useEffect(() => {
      const next = values.includes(value);
      if (next === selfChecked) return;
      setSelfChecked(next);
    }, [values.join(',')]);
  }

  const fontSize = useMemo(() => getCheckboxSize(size), [size]);
  const changeHandle = useCallback(ev => {
    if (isDisabled) return;
    const selfEvent = {
      target: {
        checked: !selfChecked
      },
      stopPropagation: ev.stopPropagation,
      preventDefault: ev.preventDefault,
      nativeEvent: ev
    };

    if (inGroup && updateState) {
      updateState && updateState(value, !selfChecked);
    }

    setSelfChecked(!selfChecked);
    onChange && onChange(selfEvent);
  }, [updateState, onChange, isDisabled, selfChecked]);
  useEffect(() => {
    if (checked === undefined) return;
    setSelfChecked(checked);
  }, [checked]);
  const {
    bindings
  } = useKeyboard(event => {
    changeHandle(event);
  }, [KeyCode.Enter, KeyCode.Space], {
    disableGlobalEvent: true
  });
  return /*#__PURE__*/_jsxs("label", {
    style: style,
    className: _JSXStyle.dynamic([["621259315", [fontSize, isDisabled ? 'not-allowed' : 'pointer', isDisabled ? 0.75 : 1, radius, isDisabled ? '0.4' : '1', radius, theme.palette.white, checkboxColor, theme.layout.stroke, theme.palette.border, theme.palette.white, theme.palette.white, theme.palette.white, theme.palette.border, theme.palette.border, labelColor, isDisabled ? 'not-allowed' : 'pointer', selfChecked ? '0.6' : '1', selfChecked && line ? 'calc(100% - 10px)' : '0px', theme.palette.text]]]) + " " + `checkbox ${className}`,
    children: [/*#__PURE__*/_jsxs("div", {
      tabIndex: disabled ? -1 : 0,
      ...bindings,
      className: _JSXStyle.dynamic([["621259315", [fontSize, isDisabled ? 'not-allowed' : 'pointer', isDisabled ? 0.75 : 1, radius, isDisabled ? '0.4' : '1', radius, theme.palette.white, checkboxColor, theme.layout.stroke, theme.palette.border, theme.palette.white, theme.palette.white, theme.palette.white, theme.palette.border, theme.palette.border, labelColor, isDisabled ? 'not-allowed' : 'pointer', selfChecked ? '0.6' : '1', selfChecked && line ? 'calc(100% - 10px)' : '0px', theme.palette.text]]]) + " " + (bindings && bindings.className != null && bindings.className || clsx('checkbox-container', focusClassName) || ""),
      children: [/*#__PURE__*/_jsx("input", {
        type: "checkbox",
        role: "checkbox",
        tabIndex: -1,
        disabled: isDisabled,
        checked: selfChecked,
        "aria-checked": selfChecked && indeterminate ? 'mixed' : selfChecked,
        "aria-disabled": isDisabled,
        onChange: changeHandle,
        ...props,
        className: _JSXStyle.dynamic([["621259315", [fontSize, isDisabled ? 'not-allowed' : 'pointer', isDisabled ? 0.75 : 1, radius, isDisabled ? '0.4' : '1', radius, theme.palette.white, checkboxColor, theme.layout.stroke, theme.palette.border, theme.palette.white, theme.palette.white, theme.palette.white, theme.palette.border, theme.palette.border, labelColor, isDisabled ? 'not-allowed' : 'pointer', selfChecked ? '0.6' : '1', selfChecked && line ? 'calc(100% - 10px)' : '0px', theme.palette.text]]]) + " " + (props && props.className != null && props.className || "")
      }), /*#__PURE__*/_jsx("div", {
        className: _JSXStyle.dynamic([["621259315", [fontSize, isDisabled ? 'not-allowed' : 'pointer', isDisabled ? 0.75 : 1, radius, isDisabled ? '0.4' : '1', radius, theme.palette.white, checkboxColor, theme.layout.stroke, theme.palette.border, theme.palette.white, theme.palette.white, theme.palette.white, theme.palette.border, theme.palette.border, labelColor, isDisabled ? 'not-allowed' : 'pointer', selfChecked ? '0.6' : '1', selfChecked && line ? 'calc(100% - 10px)' : '0px', theme.palette.text]]]) + " " + "checkbox-mask",
        children: /*#__PURE__*/_jsx("i", {
          className: _JSXStyle.dynamic([["621259315", [fontSize, isDisabled ? 'not-allowed' : 'pointer', isDisabled ? 0.75 : 1, radius, isDisabled ? '0.4' : '1', radius, theme.palette.white, checkboxColor, theme.layout.stroke, theme.palette.border, theme.palette.white, theme.palette.white, theme.palette.white, theme.palette.border, theme.palette.border, labelColor, isDisabled ? 'not-allowed' : 'pointer', selfChecked ? '0.6' : '1', selfChecked && line ? 'calc(100% - 10px)' : '0px', theme.palette.text]]]) + " " + `icon-check ${indeterminate ? 'indeterminate' : ''}`,
          children: /*#__PURE__*/_jsxs("span", {
            style: iconCheckStyle,
            className: _JSXStyle.dynamic([["621259315", [fontSize, isDisabled ? 'not-allowed' : 'pointer', isDisabled ? 0.75 : 1, radius, isDisabled ? '0.4' : '1', radius, theme.palette.white, checkboxColor, theme.layout.stroke, theme.palette.border, theme.palette.white, theme.palette.white, theme.palette.white, theme.palette.border, theme.palette.border, labelColor, isDisabled ? 'not-allowed' : 'pointer', selfChecked ? '0.6' : '1', selfChecked && line ? 'calc(100% - 10px)' : '0px', theme.palette.text]]]),
            children: [/*#__PURE__*/_jsx("div", {
              className: _JSXStyle.dynamic([["621259315", [fontSize, isDisabled ? 'not-allowed' : 'pointer', isDisabled ? 0.75 : 1, radius, isDisabled ? '0.4' : '1', radius, theme.palette.white, checkboxColor, theme.layout.stroke, theme.palette.border, theme.palette.white, theme.palette.white, theme.palette.white, theme.palette.border, theme.palette.border, labelColor, isDisabled ? 'not-allowed' : 'pointer', selfChecked ? '0.6' : '1', selfChecked && line ? 'calc(100% - 10px)' : '0px', theme.palette.text]]]) + " " + "line1"
            }), /*#__PURE__*/_jsx("div", {
              className: _JSXStyle.dynamic([["621259315", [fontSize, isDisabled ? 'not-allowed' : 'pointer', isDisabled ? 0.75 : 1, radius, isDisabled ? '0.4' : '1', radius, theme.palette.white, checkboxColor, theme.layout.stroke, theme.palette.border, theme.palette.white, theme.palette.white, theme.palette.white, theme.palette.border, theme.palette.border, labelColor, isDisabled ? 'not-allowed' : 'pointer', selfChecked ? '0.6' : '1', selfChecked && line ? 'calc(100% - 10px)' : '0px', theme.palette.text]]]) + " " + "line2"
            })]
          })
        })
      })]
    }), /*#__PURE__*/_jsx("span", {
      className: _JSXStyle.dynamic([["621259315", [fontSize, isDisabled ? 'not-allowed' : 'pointer', isDisabled ? 0.75 : 1, radius, isDisabled ? '0.4' : '1', radius, theme.palette.white, checkboxColor, theme.layout.stroke, theme.palette.border, theme.palette.white, theme.palette.white, theme.palette.white, theme.palette.border, theme.palette.border, labelColor, isDisabled ? 'not-allowed' : 'pointer', selfChecked ? '0.6' : '1', selfChecked && line ? 'calc(100% - 10px)' : '0px', theme.palette.text]]]) + " " + (clsx('text', {
        'line-through': line
      }) || ""),
      children: children || label
    }), /*#__PURE__*/_jsx(_JSXStyle, {
      id: "621259315",
      dynamic: [fontSize, isDisabled ? 'not-allowed' : 'pointer', isDisabled ? 0.75 : 1, radius, isDisabled ? '0.4' : '1', radius, theme.palette.white, checkboxColor, theme.layout.stroke, theme.palette.border, theme.palette.white, theme.palette.white, theme.palette.white, theme.palette.border, theme.palette.border, labelColor, isDisabled ? 'not-allowed' : 'pointer', selfChecked ? '0.6' : '1', selfChecked && line ? 'calc(100% - 10px)' : '0px', theme.palette.text],
      children: `label.__jsx-style-dynamic-selector{--checkbox-size:${fontSize};display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:auto;cursor:${isDisabled ? 'not-allowed' : 'pointer'};opacity:${isDisabled ? 0.75 : 1};}.checkbox-container.__jsx-style-dynamic-selector{width:var(--checkbox-size);height:var(--checkbox-size);border-radius:${radius};position:relative;opacity:${isDisabled ? '0.4' : '1'};z-index:1;}.checkbox-mask.__jsx-style-dynamic-selector{border-radius:${radius};width:var(--checkbox-size);height:var(--checkbox-size);position:absolute;z-index:50;cursor:pointer;pointer-events:none;box-sizing:border-box;-webkit-transition:all 0.25s ease;transition:all 0.25s ease;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;z-index:-1;box-sizing:border-box;}.checkbox-mask.__jsx-style-dynamic-selector i.__jsx-style-dynamic-selector:not(.icon-check){opacity:0;-webkit-transition:all 0.25s ease;transition:all 0.25s ease;color:${theme.palette.white};font-size:1.1rem;-webkit-transform:scale(0.5);-ms-transform:scale(0.5);transform:scale(0.5);}.checkbox-mask.__jsx-style-dynamic-selector:after{content:'';position:absolute;top:0px;left:0px;width:var(--checkbox-size);height:var(--checkbox-size);background:${checkboxColor};-webkit-transform:scale(0.5);-ms-transform:scale(0.5);transform:scale(0.5);border-radius:inherit;opacity:0;-webkit-transition:all 0.25s ease;transition:all 0.25s ease;z-index:-1;}.checkbox-mask.__jsx-style-dynamic-selector:before{content:'';position:absolute;top:0px;left:0px;width:var(--checkbox-size);height:var(--checkbox-size);border-radius:inherit;-webkit-transition:all 0.25s ease;transition:all 0.25s ease;z-index:-1;border:${theme.layout.stroke} solid ${theme.palette.border};box-sizing:border-box;}.checkbox-mask.__jsx-style-dynamic-selector .icon-check.__jsx-style-dynamic-selector{opacity:0;z-index:200;}.icon-check.__jsx-style-dynamic-selector{width:var(--checkbox-size);height:var(--checkbox-size);display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:all 0.25s ease;transition:all 0.25s ease;border-radius:inherit;}.icon-check.__jsx-style-dynamic-selector span.__jsx-style-dynamic-selector .line1.__jsx-style-dynamic-selector{background:transparent;content:'';position:absolute;width:8px;height:1px;-webkit-transition:all 0.2s ease;transition:all 0.2s ease;border-radius:5px;z-index:100;bottom:0px;}.icon-check.__jsx-style-dynamic-selector span.__jsx-style-dynamic-selector .line1.__jsx-style-dynamic-selector:after{content:'';position:absolute;left:0px;width:0%;height:2px;background:${theme.palette.white};-webkit-transition:all 0.25s ease;transition:all 0.25s ease;border-radius:5px 0px 0px 5px;}.icon-check.__jsx-style-dynamic-selector span.__jsx-style-dynamic-selector .line2.__jsx-style-dynamic-selector{bottom:0px;right:0rem;z-index:100;border-radius:5px;background:transparent;content:'';position:absolute;height:13px;border-radius:5px;-webkit-transition:all 0.2s ease;transition:all 0.2s ease;width:2px;}.icon-check.__jsx-style-dynamic-selector span.__jsx-style-dynamic-selector .line2.__jsx-style-dynamic-selector:after{content:'';position:absolute;width:2px;height:0%;background:${theme.palette.white};-webkit-transition:all 0.25s ease;transition:all 0.25s ease;left:0px;bottom:0px;border-radius:5px 5px 0px 0px;}.icon-check.active.__jsx-style-dynamic-selector:before{width:8px;}.icon-check.active.__jsx-style-dynamic-selector:after{width:4px;}.icon-check.indeterminate.__jsx-style-dynamic-selector span.__jsx-style-dynamic-selector:after{position:relative;content:'';width:10px;height:2px;background:${theme.palette.white};display:block;}.icon-check.indeterminate.__jsx-style-dynamic-selector span.__jsx-style-dynamic-selector .line1.__jsx-style-dynamic-selector{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg);bottom:0px;right:-1px;opacity:0;display:none;}.icon-check.indeterminate.__jsx-style-dynamic-selector span.__jsx-style-dynamic-selector .line2.__jsx-style-dynamic-selector{right:0px;bottom:-0.14rem;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);-webkit-transition:all 0.25s ease;transition:all 0.25s ease;height:11px;display:none;}input.__jsx-style-dynamic-selector{position:absolute;width:var(--checkbox-size);height:var(--checkbox-size);top:0px;left:0px;margin:0px;padding:0px;opacity:0;z-index:100;cursor:pointer;}input.__jsx-style-dynamic-selector:disabled{opacity:0;pointer-events:none;}input.__jsx-style-dynamic-selector:active~.checkbox-mask.__jsx-style-dynamic-selector{background:${theme.palette.border};}input.__jsx-style-dynamic-selector:hover~.checkbox-mask.__jsx-style-dynamic-selector{background:${theme.palette.border};}input.__jsx-style-dynamic-selector:hover~.checkbox-mask.__jsx-style-dynamic-selector:before{border:2px solid transparent;}input.__jsx-style-dynamic-selector:checked~.checkbox-mask.__jsx-style-dynamic-selector i.__jsx-style-dynamic-selector:not(.icon-check){opacity:1;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1);-webkit-transition:all 0.25s ease 0.15s;transition:all 0.25s ease 0.15s;}input.__jsx-style-dynamic-selector:checked~.checkbox-mask.__jsx-style-dynamic-selector .icon-check.__jsx-style-dynamic-selector{opacity:1;}input.__jsx-style-dynamic-selector:checked~.checkbox-mask.__jsx-style-dynamic-selector .icon-check.__jsx-style-dynamic-selector span.__jsx-style-dynamic-selector .line1.__jsx-style-dynamic-selector:after{width:100%;-webkit-transition:all 0.25s ease 0.1s;transition:all 0.25s ease 0.1s;}input.__jsx-style-dynamic-selector:checked~.checkbox-mask.__jsx-style-dynamic-selector .icon-check.__jsx-style-dynamic-selector span.__jsx-style-dynamic-selector .line2.__jsx-style-dynamic-selector:after{-webkit-transition:all 0.2s ease 0.3s;transition:all 0.2s ease 0.3s;height:100%;}input.__jsx-style-dynamic-selector:checked~.checkbox-mask.__jsx-style-dynamic-selector:after{opacity:1;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1);}input.__jsx-style-dynamic-selector:checked~.checkbox-mask.__jsx-style-dynamic-selector:before{opacity:0;-webkit-transform:scale(1.2);-ms-transform:scale(1.2);transform:scale(1.2);}.text.__jsx-style-dynamic-selector{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:${labelColor};font-size:var(--checkbox-size);line-height:var(--checkbox-size);padding-left:calc(var(--checkbox-size) * 0.57);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:${isDisabled ? 'not-allowed' : 'pointer'};}.line-through.__jsx-style-dynamic-selector{opacity:${selfChecked ? '0.6' : '1'};}.text.__jsx-style-dynamic-selector:before{content:'';position:absolute;width:${selfChecked && line ? 'calc(100% - 10px)' : '0px'};height:2px;background:${theme.palette.text};opcity:0.8;-webkit-transition:all 0.25s ease;transition:all 0.25s ease;}`
    }), focusStyles]
  });
};

Checkbox.defaultProps = defaultProps;

if (__DEV__) {
  Checkbox.displayName = 'NextUI - Checkbox';
}

export default Checkbox;