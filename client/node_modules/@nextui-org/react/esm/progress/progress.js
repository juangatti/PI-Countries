import _JSXStyle from "styled-jsx/style";
import React, { useMemo } from 'react';
import useTheme from '../use-theme';
import CSSTransition from '../utils/css-transition';
import withDefaults from '../utils/with-defaults';
import { addColorAlpha, getNormalColor } from '../utils/color';
import { getShadowColor, getSizes } from './styles';
import { valueToPercent } from '../utils/numbers';
import { getFocusStyles } from '../utils/styles';
import clsx from '../utils/clsx';
import { __DEV__ } from '../utils/assertion';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
const defaultProps = {
  color: 'primary',
  status: 'default',
  size: 'medium',
  striped: false,
  animated: true,
  squared: false,
  shadow: false,
  indeterminated: false,
  value: 0,
  min: 0,
  max: 100,
  className: ''
};

const ProgressBar = ({
  color,
  value: valueProp,
  max,
  min,
  striped,
  status,
  animated,
  shadow,
  squared,
  size,
  indeterminated,
  className,
  ...props
}) => {
  const theme = useTheme();
  const value = useMemo(() => valueProp > max ? max : valueProp < min ? min : valueProp, [valueProp, min, max]);
  const percent = useMemo(() => valueToPercent(value, min, max), [value, min, max]);
  const fillerColor = useMemo(() => getNormalColor(color, theme.palette, theme.palette.primary), [color, theme.palette]);
  const shadowColor = useMemo(() => shadow ? getShadowColor(color, theme.palette) : 'none', [color, shadow, theme.palette]);
  const {
    height,
    radius
  } = useMemo(() => getSizes(size, squared), [size, squared]);
  const bgColor = useMemo(() => {
    if (status === 'default') {
      return theme.palette.accents_2;
    }

    const normalColor = getNormalColor(status, theme.palette, theme.palette.accents_2);
    return addColorAlpha(normalColor, 0.2);
  }, [status, theme.palette]);
  const {
    className: focusClassName,
    styles: focusStyles
  } = getFocusStyles(theme);
  return /*#__PURE__*/_jsxs("div", {
    role: "progressbar",
    ...props,
    className: _JSXStyle.dynamic([["3309033417", [height, !indeterminated ? 'visible' : 'hidden', bgColor, radius, fillerColor, animated ? 'width 0.5s cubic-bezier(0.4, 0, 0.2, 1)' : 'none', shadowColor, percent, theme.layout.gap, theme.layout.gap]]]) + " " + (props && props.className != null && props.className || clsx('progress', className) || ""),
    children: [/*#__PURE__*/_jsx(CSSTransition, {
      visible: true,
      name: "progress-wrapper",
      enterTime: 10,
      leaveTime: 20,
      clearTime: 300,
      children: /*#__PURE__*/_jsx("div", {
        tabIndex: 0,
        "aria-valuenow": value,
        "aria-valuemin": min,
        "aria-valuemax": max,
        ...props,
        className: _JSXStyle.dynamic([["3309033417", [height, !indeterminated ? 'visible' : 'hidden', bgColor, radius, fillerColor, animated ? 'width 0.5s cubic-bezier(0.4, 0, 0.2, 1)' : 'none', shadowColor, percent, theme.layout.gap, theme.layout.gap]]]) + " " + (props && props.className != null && props.className || clsx('filler', {
          striped,
          indeterminated
        }, focusClassName) || "")
      })
    }), /*#__PURE__*/_jsx(_JSXStyle, {
      id: "3309033417",
      dynamic: [height, !indeterminated ? 'visible' : 'hidden', bgColor, radius, fillerColor, animated ? 'width 0.5s cubic-bezier(0.4, 0, 0.2, 1)' : 'none', shadowColor, percent, theme.layout.gap, theme.layout.gap],
      children: `.progress.__jsx-style-dynamic-selector{margin:0;padding:0;width:100%;height:${height};position:relative;overflow:${!indeterminated ? 'visible' : 'hidden'};background:${bgColor};border-radius:${radius};}.filler.__jsx-style-dynamic-selector{margin:0;padding:0;width:0;opacity:0;height:100%;min-width:inherit;background:${fillerColor};border-radius:inherit;-webkit-transition:${animated ? 'width 0.5s cubic-bezier(0.4, 0, 0.2, 1)' : 'none'};transition:${animated ? 'width 0.5s cubic-bezier(0.4, 0, 0.2, 1)' : 'none'};box-shadow:${shadowColor};-webkit-transition:all 0.25s ease;transition:all 0.25s ease;}.progress-wrapper-enter.__jsx-style-dynamic-selector{opacity:0;}.progress-wrapper-enter-active.__jsx-style-dynamic-selector{opacity:1;width:${percent}%;}.filler.striped.__jsx-style-dynamic-selector{background-image:linear-gradient( 45deg, rgba(0,0,0,0.1) 25%, transparent 25%, transparent 50%, rgba(0,0,0,0.1) 50%, rgba(0,0,0,0.1) 75%, transparent 75%, transparent );background-size:${theme.layout.gap} ${theme.layout.gap};}.filler.indeterminated.__jsx-style-dynamic-selector{position:absolute;width:0%;-webkit-transition-property:background-color,width,left,border-color, opacity,shadow,-webkit-transform;-webkit-transition-property:background-color,width,left,border-color, opacity,shadow,transform;transition-property:background-color,width,left,border-color, opacity,shadow,transform;-webkit-transition-duration:300ms;transition-duration:300ms;will-change:left;min-width:50%;-webkit-animation:1s ease 0s infinite normal none running indeterminate-animation-__jsx-style-dynamic-selector;animation:1s ease 0s infinite normal none running indeterminate-animation-__jsx-style-dynamic-selector;}@-webkit-keyframes indeterminate-animation-__jsx-style-dynamic-selector{0%{left:-40%;}100%{left:100%;}}@keyframes indeterminate-animation-__jsx-style-dynamic-selector{0%{left:-40%;}100%{left:100%;}}`
    }), focusStyles]
  });
};

ProgressBar.defaultProps = defaultProps;

if (__DEV__) {
  ProgressBar.displayName = 'NextUI - Progress';
}

export default withDefaults( /*#__PURE__*/React.memo(ProgressBar), defaultProps);