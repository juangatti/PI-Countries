import _JSXStyle from "styled-jsx/style";
import React, { useMemo } from 'react';
import useTheme from '../use-theme';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
const defaultProps = {
  gap: 2,
  fluid: false,
  xs: false,
  sm: false,
  md: false,
  lg: false,
  xl: false,
  wrap: 'wrap',
  as: 'div',
  display: 'block',
  className: ''
};

const Container = ({
  fluid,
  xs,
  sm,
  md,
  lg,
  xl,
  wrap,
  gap,
  as,
  display,
  justify,
  direction,
  alignItems,
  alignContent,
  children,
  className,
  style,
  ...props
}) => {
  const theme = useTheme();
  const classes = useMemo(() => {
    const aligns = {
      fluid,
      xs,
      sm,
      md,
      lg,
      xl,
      wrap,
      display,
      justify,
      direction,
      alignItems,
      alignContent
    };
    const classString = Object.keys(aligns).reduce((pre, name) => {
      if (aligns[name] !== undefined && aligns[name] !== false) return `${pre} ${name}`;
      return pre;
    }, '');
    return classString.trim();
  }, [xs, sm, md, lg, xl, fluid, wrap, display, justify, direction, alignItems, alignContent]);
  const gapUnit = useMemo(() => {
    return `calc(${gap} * ${theme.layout.gapQuarter})`;
  }, [gap, theme.layout.gapQuarter]);
  const Component = as;
  return /*#__PURE__*/_jsxs(Component, {
    style: style,
    ...props,
    className: _JSXStyle.dynamic([["1804506693", [gapUnit, gapUnit, wrap, display, justify, direction, alignContent, alignItems, theme.breakpoints.xs.max, theme.breakpoints.xs.max, theme.breakpoints.sm.min, theme.breakpoints.sm.min, theme.breakpoints.md.min, theme.breakpoints.md.min, theme.breakpoints.lg.min, theme.breakpoints.lg.min, theme.breakpoints.xl.min, theme.breakpoints.xl.min]]]) + " " + (props && props.className != null && props.className || `container ${classes} ${className}`),
    children: [children, /*#__PURE__*/_jsx(_JSXStyle, {
      id: "1804506693",
      dynamic: [gapUnit, gapUnit, wrap, display, justify, direction, alignContent, alignItems, theme.breakpoints.xs.max, theme.breakpoints.xs.max, theme.breakpoints.sm.min, theme.breakpoints.sm.min, theme.breakpoints.md.min, theme.breakpoints.md.min, theme.breakpoints.lg.min, theme.breakpoints.lg.min, theme.breakpoints.xl.min, theme.breakpoints.xl.min],
      children: `.container.__jsx-style-dynamic-selector{width:100%;margin-right:auto;margin-left:auto;padding-right:${gapUnit};padding-left:${gapUnit};}.fluid.__jsx-style-dynamic-selector{max-width:100% !important;}.wrap.__jsx-style-dynamic-selector{-webkit-flex-wrap:${wrap};-ms-flex-wrap:${wrap};flex-wrap:${wrap};}.display.__jsx-style-dynamic-selector{display:${display};}.justify.__jsx-style-dynamic-selector{-webkit-box-pack:${justify};-webkit-justify-content:${justify};-ms-flex-pack:${justify};justify-content:${justify};}.direction.__jsx-style-dynamic-selector{-webkit-flex-direction:${direction};-ms-flex-direction:${direction};flex-direction:${direction};}.alignContent.__jsx-style-dynamic-selector{-webkit-align-content:${alignContent};-ms-flex-line-pack:${alignContent};align-content:${alignContent};}.alignItems.__jsx-style-dynamic-selector{-webkit-align-items:${alignItems};-webkit-box-align:${alignItems};-ms-flex-align:${alignItems};align-items:${alignItems};}@media only screen and (min-width:${theme.breakpoints.xs.max}){.container.__jsx-style-dynamic-selector{max-width:${theme.breakpoints.xs.max};}.sm.__jsx-style-dynamic-selector,.md.__jsx-style-dynamic-selector,.lg.__jsx-style-dynamic-selector,.xl.__jsx-style-dynamic-selector{max-width:100%;}}@media only screen and (min-width:${theme.breakpoints.sm.min}){.container.__jsx-style-dynamic-selector{max-width:${theme.breakpoints.sm.min};}.md.__jsx-style-dynamic-selector,.lg.__jsx-style-dynamic-selector,.xl.__jsx-style-dynamic-selector{max-width:100%;}}@media only screen and (min-width:${theme.breakpoints.md.min}){.container.__jsx-style-dynamic-selector{max-width:${theme.breakpoints.md.min};}.lg.__jsx-style-dynamic-selector,.xl.__jsx-style-dynamic-selector{max-width:100%;}}@media only screen and (min-width:${theme.breakpoints.lg.min}){.container.__jsx-style-dynamic-selector{max-width:${theme.breakpoints.lg.min};}.xl.__jsx-style-dynamic-selector{max-width:100%;}}@media only screen and (min-width:${theme.breakpoints.xl.min}){.container.__jsx-style-dynamic-selector{max-width:${theme.breakpoints.xl.min};}}`
    })]
  });
};

Container.defaultProps = defaultProps;
export default /*#__PURE__*/React.memo(Container);