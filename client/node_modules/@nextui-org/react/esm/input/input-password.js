import React, { useImperativeHandle, useMemo, useRef, useState } from 'react';
import withDefaults from '../utils/with-defaults';
import { defaultProps } from './input-props';
import PasswordIcon from './password-icon';
import Input from './input';
import { __DEV__ } from '../utils/assertion';
import { jsx as _jsx } from "react/jsx-runtime";
const passwordDefaultProps = { ...defaultProps,
  hideToggle: false,
  visibleIcon: /*#__PURE__*/_jsx(PasswordIcon, {
    visible: true
  }),
  hiddenIcon: /*#__PURE__*/_jsx(PasswordIcon, {
    visible: false
  })
};
const InputPassword = /*#__PURE__*/React.forwardRef(({
  hideToggle,
  visibleIcon,
  hiddenIcon,
  children,
  ...props
}, ref) => {
  const inputRef = useRef(null);
  const [visible, setVisible] = useState(false);
  useImperativeHandle(ref, () => inputRef.current);

  const iconClickHandler = () => {
    setVisible(v => !v);
  };

  const inputProps = useMemo(() => ({ ...props,
    ref: inputRef,
    contentClickable: true,
    onContentClick: iconClickHandler,
    type: visible ? 'text' : 'password'
  }), [props, iconClickHandler, visible, inputRef]);
  const icon = useMemo(() => {
    if (hideToggle) return null;
    return visible ? visibleIcon : hiddenIcon;
  }, [hideToggle, visible, visibleIcon, hiddenIcon]);
  return /*#__PURE__*/_jsx(Input, {
    contentRight: icon,
    ...inputProps,
    children: children
  });
});

if (__DEV__) {
  InputPassword.displayName = 'NextUI - Input Password';
}

InputPassword.defaultProps = defaultProps;
export default withDefaults(InputPassword, passwordDefaultProps);