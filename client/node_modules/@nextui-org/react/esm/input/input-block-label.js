import _JSXStyle from "styled-jsx/style";
import React from 'react';
import useTheme from '../use-theme';
import { addColorAlpha } from '../utils/color';
import clsx from '../utils/clsx';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";

const InputBlockLabel = ({
  label,
  labelId,
  animated,
  htmlFor,
  fontSize,
  selfValue,
  color,
  status,
  rounded,
  bordered,
  underlined,
  asPlaceholder = false,
  placeholderColor,
  heightRatio,
  hasLeftContent,
  isTextarea,
  hover,
  ...props
}) => {
  const theme = useTheme();
  return /*#__PURE__*/_jsxs("label", {
    id: labelId,
    htmlFor: htmlFor,
    ...props,
    className: _JSXStyle.dynamic([["3088028330", [color || theme.palette.text, theme.layout.gapQuarter, fontSize, theme.layout.gapQuarter, animated ? 'left 0.25s ease 0s, color 0.25s ease 0s, top 0.25s ease 0s' : 'none', placeholderColor || theme.palette.accents_3, heightRatio, theme.layout.gap, placeholderColor && status !== 'default' ? addColorAlpha(placeholderColor, 1) : color || theme.palette.text, underlined ? '0px' : '4px']]]) + " " + (props && props.className != null && props.className || clsx('input-label-block', {
      'as-placeholder': asPlaceholder,
      'with-value': selfValue,
      'has-content-left': hasLeftContent,
      'is-textarea': isTextarea,
      underlined,
      rounded,
      hover
    }) || ""),
    children: [label, /*#__PURE__*/_jsx(_JSXStyle, {
      id: "3088028330",
      dynamic: [color || theme.palette.text, theme.layout.gapQuarter, fontSize, theme.layout.gapQuarter, animated ? 'left 0.25s ease 0s, color 0.25s ease 0s, top 0.25s ease 0s' : 'none', placeholderColor || theme.palette.accents_3, heightRatio, theme.layout.gap, placeholderColor && status !== 'default' ? addColorAlpha(placeholderColor, 1) : color || theme.palette.text, underlined ? '0px' : '4px'],
      children: `.input-label-block.__jsx-style-dynamic-selector{display:block;font-weight:normal;color:${color || theme.palette.text};padding:0 0 0 4px;margin-bottom:${theme.layout.gapQuarter};font-size:${fontSize};line-height:1.5;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}.input-label-block.__jsx-style-dynamic-selector>*:first-child{margin-top:0;}.input-label-block.__jsx-style-dynamic-selector>*:last-child{margin-bottom:0;}.input-label-block.rounded.__jsx-style-dynamic-selector{padding:0 0 0 ${theme.layout.gapQuarter};}.as-placeholder.__jsx-style-dynamic-selector{position:absolute;padding:0;z-index:1;left:12px;top:20%;margin-bottom:0;cursor:text;-webkit-transition:${animated ? 'left 0.25s ease 0s, color 0.25s ease 0s, top 0.25s ease 0s' : 'none'};transition:${animated ? 'left 0.25s ease 0s, color 0.25s ease 0s, top 0.25s ease 0s' : 'none'};color:${placeholderColor || theme.palette.accents_3};}.as-placeholder.underlined.__jsx-style-dynamic-selector{left:4px;}.as-placeholder.has-content-left.__jsx-style-dynamic-selector{left:calc(12px + ${heightRatio} * ${theme.layout.gap} * 0.64);}.as-placeholder.hover.__jsx-style-dynamic-selector,.as-placeholder.with-value.__jsx-style-dynamic-selector{color:${placeholderColor && status !== 'default' ? addColorAlpha(placeholderColor, 1) : color || theme.palette.text};top:-72%;left:${underlined ? '0px' : '4px'};cursor:inherit;}.as-placeholder.is-textarea.__jsx-style-dynamic-selector{top:10px;}.as-placeholder.is-textarea.hover.__jsx-style-dynamic-selector,.as-placeholder.is-textarea.with-value.__jsx-style-dynamic-selector{top:-28px;}`
    })]
  });
};

const MemoInputBlockLabel = /*#__PURE__*/React.memo(InputBlockLabel);
export default MemoInputBlockLabel;