import _JSXStyle from "styled-jsx/style";
import React, { useMemo } from 'react';
import useTheme from '../use-theme';
import withDefaults from '../utils/with-defaults';
import { ButtonGroupContext } from './button-group-context';
import { getGroupBorder } from './styles';
import { getNormalRadius } from '../utils/dimensions';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
const defaultProps = {
  disabled: false,
  vertical: false,
  bordered: false,
  light: false,
  flat: false,
  shadow: false,
  auto: false,
  animated: false,
  rounded: false,
  ghost: false,
  borderWeight: 'normal',
  size: 'medium',
  color: 'default',
  className: ''
};

const ButtonGroup = groupProps => {
  const theme = useTheme();
  const {
    disabled,
    size,
    color,
    bordered,
    ghost,
    light,
    flat,
    shadow,
    auto,
    animated,
    rounded,
    vertical,
    children,
    className,
    ...props
  } = groupProps;
  const initialValue = useMemo(() => ({
    disabled,
    size,
    color,
    bordered,
    light,
    ghost,
    flat,
    shadow,
    auto,
    animated,
    rounded,
    isButtonGroup: true
  }), [disabled, size, color, bordered, light, ghost, flat]);
  const {
    color: borderColor,
    width: borderWidth
  } = useMemo(() => {
    return getGroupBorder(theme.palette, groupProps);
  }, [theme, disabled, bordered]);
  const radius = useMemo(() => getNormalRadius(size, rounded), [size, rounded]); // to avoid passing borderweight prop to the html button element

  delete props.borderWeight;
  return /*#__PURE__*/_jsx(ButtonGroupContext.Provider, {
    value: initialValue,
    children: /*#__PURE__*/_jsxs("div", { ...props,
      className: _JSXStyle.dynamic([["2062957038", [radius, theme.layout.gapQuarter, borderWidth, borderColor, borderWidth, borderColor, borderWidth, borderColor]]]) + " " + (props && props.className != null && props.className || `button-group ${vertical ? 'vertical' : 'horizontal'} ${groupProps.color === 'gradient' ? 'gradient' : ''} ${className}`),
      children: [children, /*#__PURE__*/_jsx(_JSXStyle, {
        id: "2062957038",
        dynamic: [radius, theme.layout.gapQuarter, borderWidth, borderColor, borderWidth, borderColor, borderWidth, borderColor],
        children: `.button-group.__jsx-style-dynamic-selector{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;border-radius:${radius};margin:${theme.layout.gapQuarter};border:${borderWidth} solid ${borderColor};background-color:transparent;height:-webkit-min-content;height:-moz-min-content;height:min-content;}.vertical.__jsx-style-dynamic-selector{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.button-group.__jsx-style-dynamic-selector .button .text{top:0;}.button-group.__jsx-style-dynamic-selector .button{border:none;}.horizontal.__jsx-style-dynamic-selector .button:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0;border-left:${borderWidth} solid ${borderColor};}.horizontal.__jsx-style-dynamic-selector .button:not(:first-child):before{border-radius:0;}.horizontal.__jsx-style-dynamic-selector .button:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0;}.horizontal.__jsx-style-dynamic-selector .button:not(:last-child):before{border-radius:0;}.gradient.horizontal.__jsx-style-dynamic-selector .button:not(:last-child):not(:first-child){padding-left:0 !important;-webkit-filter:hue-rotate(310deg);filter:hue-rotate(310deg);}.gradient.horizontal.__jsx-style-dynamic-selector .button:last-child{-webkit-filter:hue-rotate(250deg);filter:hue-rotate(250deg);padding-left:0 !important;}.gradient.vertical.__jsx-style-dynamic-selector .button:not(:last-child):not(:first-child){padding-top:0 !important;}.gradient.vertical.__jsx-style-dynamic-selector .button:last-child{padding-top:0 !important;}.vertical.__jsx-style-dynamic-selector .button:not(:first-child){border-top-left-radius:0;border-top-right-radius:0;border-top:${borderWidth} solid ${borderColor};}.vertical.__jsx-style-dynamic-selector .button:not(:first-child):before{border-radius:0;}.vertical.__jsx-style-dynamic-selector .button:not(:last-child){border-bottom-left-radius:0;border-bottom-right-radius:0;}.vertical.__jsx-style-dynamic-selector .button:not(:last-child):before{border-bottom-left-radius:0;border-bottom-right-radius:0;}`
      })]
    })
  });
};

const MemoButtonGroup = /*#__PURE__*/React.memo(ButtonGroup);
export default withDefaults(MemoButtonGroup, defaultProps);