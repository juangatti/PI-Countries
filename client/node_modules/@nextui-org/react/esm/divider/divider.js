import _JSXStyle from "styled-jsx/style";
import React, { useMemo } from 'react';
import useTheme from '../use-theme';
import withDefaults from '../utils/with-defaults';
import { getMargin } from '../utils/dimensions';
import { getNormalColor } from '../utils/color';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
const defaultProps = {
  x: 0,
  y: 2,
  height: 1,
  align: 'center',
  color: 'default',
  className: ''
};

const Divider = ({
  height,
  color,
  x,
  y,
  align,
  children,
  className,
  ...props
}) => {
  const theme = useTheme();
  const bgColor = useMemo(() => getNormalColor(color, theme.palette, theme.palette.border), [color, theme.palette]);
  const alignClassName = useMemo(() => {
    if (!align || align === 'center') return '';
    if (align === 'left' || align === 'start') return 'start';
    return 'end';
  }, [align]);
  const textColor = color === 'default' ? theme.palette.foreground : color;
  const top = y ? getMargin(y / 2) : 0;
  const left = x ? getMargin(x / 2) : 0;
  return /*#__PURE__*/_jsxs("div", {
    role: "separator",
    ...props,
    className: _JSXStyle.dynamic([["3028347750", [height, bgColor, top, left, theme.layout.gap, theme.palette.background, textColor]]]) + " " + (props && props.className != null && props.className || `divider ${className}`),
    children: [children && /*#__PURE__*/_jsx("span", {
      className: _JSXStyle.dynamic([["3028347750", [height, bgColor, top, left, theme.layout.gap, theme.palette.background, textColor]]]) + " " + `text ${alignClassName}`,
      children: children
    }), /*#__PURE__*/_jsx(_JSXStyle, {
      id: "3028347750",
      dynamic: [height, bgColor, top, left, theme.layout.gap, theme.palette.background, textColor],
      children: `.divider.__jsx-style-dynamic-selector{width:auto;width:100%;max-width:100%;height:calc(${height} * 1px);background:${bgColor};margin:${top} ${left};position:relative;}.text.__jsx-style-dynamic-selector{position:absolute;left:50%;top:50%;min-height:100%;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);padding:0 ${theme.layout.gap};font-size:1rem;font-weight:bold;text-transform:capitalize;background-color:${theme.palette.background};color:${textColor};z-index:10;}.text.start.__jsx-style-dynamic-selector{-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);left:7%;}.text.end.__jsx-style-dynamic-selector{-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);left:auto;right:7%;}`
    })]
  });
};

const MemoDivider = /*#__PURE__*/React.memo(Divider);
export default withDefaults(MemoDivider, defaultProps);