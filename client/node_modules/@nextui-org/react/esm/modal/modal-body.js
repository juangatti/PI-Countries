import _JSXStyle from "styled-jsx/style";
import React, { useContext, useMemo } from 'react';
import withDefaults from '../utils/with-defaults';
import { ModalContext } from './modal-context';
import useTheme from '../use-theme';
import cslx from '../utils/clsx';
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
const defaultProps = {
  className: '',
  autoMargin: true
};

const ModalContent = ({
  className,
  children,
  autoMargin: autoMarginProp,
  ...props
}) => {
  const theme = useTheme();
  const {
    autoMargin: autoMarginContext,
    noPadding
  } = useContext(ModalContext);
  const autoMargin = useMemo(() => {
    return autoMarginContext !== undefined ? autoMarginContext : autoMarginProp;
  }, [autoMarginProp, autoMarginContext]);
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsx("div", { ...props,
      className: _JSXStyle.dynamic([["1688581216", [theme.layout.gapHalf, theme.layout.gap]]]) + " " + (props && props.className != null && props.className || cslx('modal-body', {
        'auto-margin': autoMargin,
        'no-padding': noPadding
      }, className) || ""),
      children: children
    }), /*#__PURE__*/_jsx(_JSXStyle, {
      id: "1688581216",
      dynamic: [theme.layout.gapHalf, theme.layout.gap],
      children: `.modal-body.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;padding:${theme.layout.gapHalf} calc(${theme.layout.gap} + 0.25rem);overflow-y:auto;position:relative;text-align:left;}.no-padding.__jsx-style-dynamic-selector{-webkit-flex:1;-ms-flex:1;flex:1;padding:0;}.auto-margin.__jsx-style-dynamic-selector>*:first-child{margin-top:0;}.auto-margin.__jsx-style-dynamic-selector>*{margin-bottom:1rem;}.auto-margin.__jsx-style-dynamic-selector>*:last-child{margin-bottom:0;}`
    })]
  });
};

const MemoModalContent = /*#__PURE__*/React.memo(ModalContent);
export default withDefaults(MemoModalContent, defaultProps);