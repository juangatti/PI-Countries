import React from 'react';
import RadioGroup from './radio-group';
import RadioDescription from './radio-description';
import { NormalSizes, SimpleColors } from '../utils/prop-types';
interface RadioEventTarget {
    checked: boolean;
}
export interface RadioEvent {
    target: RadioEventTarget;
    stopPropagation: () => void;
    preventDefault: () => void;
    nativeEvent: React.ChangeEvent;
}
interface Props {
    checked?: boolean;
    value?: string | number;
    squared?: boolean;
    size?: NormalSizes | number;
    color?: SimpleColors | string;
    textColor?: SimpleColors | string;
    className?: string;
    disabled?: boolean;
    onChange?: (e: RadioEvent) => void;
}
declare const defaultProps: {
    size: number | "mini" | "small" | "medium" | "large" | "xlarge";
    color: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    textColor: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    disabled: boolean;
    squared: boolean;
    className: string;
};
declare type NativeAttrs = Omit<React.InputHTMLAttributes<unknown>, keyof Props>;
export declare type RadioProps = Props & typeof defaultProps & NativeAttrs;
declare type RadioComponent<P = {}> = React.FC<P> & {
    Group: typeof RadioGroup;
    Desc: typeof RadioDescription;
    Description: typeof RadioDescription;
};
declare type ComponentProps = Partial<typeof defaultProps> & Omit<Props, keyof typeof defaultProps> & NativeAttrs;
declare const _default: RadioComponent<ComponentProps>;
export default _default;
