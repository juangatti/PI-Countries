import _JSXStyle from "styled-jsx/style";
import React, { useMemo } from 'react';
import useTheme from '../use-theme';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
const defaultProps = {
  xs: false,
  sm: false,
  md: false,
  lg: false,
  xl: false,
  className: ''
};

const getItemLayout = val => {
  const display = val === 0 ? 'display: none;' : 'display: inherit';

  if (typeof val === 'number') {
    const width = 100 / 12 * val;
    const ratio = width > 100 ? '100%' : width < 0 ? '0' : `${width}%`;
    return {
      grow: 0,
      display,
      width: ratio,
      basis: ratio
    };
  }

  return {
    grow: 1,
    display,
    width: '100%',
    basis: '0'
  };
};

const GridBasicItem = ({
  xs,
  sm,
  md,
  lg,
  xl,
  justify,
  direction,
  alignItems,
  alignContent,
  children,
  className,
  ...props
}) => {
  const theme = useTheme();
  const classes = useMemo(() => {
    const aligns = {
      justify,
      direction,
      alignItems,
      alignContent,
      xs,
      sm,
      md,
      lg,
      xl
    };
    const classString = Object.keys(aligns).reduce((pre, name) => {
      if (aligns[name] !== undefined && aligns[name] !== false) return `${pre} ${name}`;
      return pre;
    }, '');
    return classString.trim();
  }, [justify, direction, alignItems, alignContent, xs, sm, md, lg, xl]);
  const layout = useMemo(() => ({
    xs: getItemLayout(xs),
    sm: getItemLayout(sm),
    md: getItemLayout(md),
    lg: getItemLayout(lg),
    xl: getItemLayout(xl)
  }), [xs, sm, md, lg, xl]);
  return /*#__PURE__*/_jsxs("div", { ...props,
    className: _JSXStyle.dynamic([["972328673", [justify, direction, alignContent, alignItems, layout.xs.grow, layout.xs.width, layout.xs.basis, layout.xs.display, theme.breakpoints.xs.max, layout.xs.grow, layout.xs.width, layout.xs.basis, layout.xs.display, theme.breakpoints.sm.min, layout.sm.grow, layout.sm.width, layout.sm.basis, layout.sm.display, theme.breakpoints.md.min, layout.md.grow, layout.md.width, layout.md.basis, layout.md.display, theme.breakpoints.lg.min, layout.lg.grow, layout.lg.width, layout.lg.basis, layout.lg.display, theme.breakpoints.xl.min, layout.xl.grow, layout.xl.width, layout.xl.basis, layout.xl.display]]]) + " " + (props && props.className != null && props.className || `item ${classes} ${className}`),
    children: [children, /*#__PURE__*/_jsx(_JSXStyle, {
      id: "972328673",
      dynamic: [justify, direction, alignContent, alignItems, layout.xs.grow, layout.xs.width, layout.xs.basis, layout.xs.display, theme.breakpoints.xs.max, layout.xs.grow, layout.xs.width, layout.xs.basis, layout.xs.display, theme.breakpoints.sm.min, layout.sm.grow, layout.sm.width, layout.sm.basis, layout.sm.display, theme.breakpoints.md.min, layout.md.grow, layout.md.width, layout.md.basis, layout.md.display, theme.breakpoints.lg.min, layout.lg.grow, layout.lg.width, layout.lg.basis, layout.lg.display, theme.breakpoints.xl.min, layout.xl.grow, layout.xl.width, layout.xl.basis, layout.xl.display],
      children: `.justify.__jsx-style-dynamic-selector{-webkit-box-pack:${justify};-webkit-justify-content:${justify};-ms-flex-pack:${justify};justify-content:${justify};}.direction.__jsx-style-dynamic-selector{-webkit-flex-direction:${direction};-ms-flex-direction:${direction};flex-direction:${direction};}.alignContent.__jsx-style-dynamic-selector{-webkit-align-content:${alignContent};-ms-flex-line-pack:${alignContent};align-content:${alignContent};}.alignItems.__jsx-style-dynamic-selector{-webkit-align-items:${alignItems};-webkit-box-align:${alignItems};-ms-flex-align:${alignItems};align-items:${alignItems};}.xs.__jsx-style-dynamic-selector{-webkit-box-flex:${layout.xs.grow};-webkit-flex-grow:${layout.xs.grow};-ms-flex-positive:${layout.xs.grow};flex-grow:${layout.xs.grow};max-width:${layout.xs.width};-webkit-flex-basis:${layout.xs.basis};-ms-flex-preferred-size:${layout.xs.basis};flex-basis:${layout.xs.basis};${layout.xs.display};}@media only screen and (max-width:${theme.breakpoints.xs.max}){.xs.__jsx-style-dynamic-selector{-webkit-box-flex:${layout.xs.grow};-webkit-flex-grow:${layout.xs.grow};-ms-flex-positive:${layout.xs.grow};flex-grow:${layout.xs.grow};max-width:${layout.xs.width};-webkit-flex-basis:${layout.xs.basis};-ms-flex-preferred-size:${layout.xs.basis};flex-basis:${layout.xs.basis};${layout.xs.display};}}@media only screen and (min-width:${theme.breakpoints.sm.min}){.sm.__jsx-style-dynamic-selector{-webkit-box-flex:${layout.sm.grow};-webkit-flex-grow:${layout.sm.grow};-ms-flex-positive:${layout.sm.grow};flex-grow:${layout.sm.grow};max-width:${layout.sm.width};-webkit-flex-basis:${layout.sm.basis};-ms-flex-preferred-size:${layout.sm.basis};flex-basis:${layout.sm.basis};${layout.sm.display};}}@media only screen and (min-width:${theme.breakpoints.md.min}){.md.__jsx-style-dynamic-selector{-webkit-box-flex:${layout.md.grow};-webkit-flex-grow:${layout.md.grow};-ms-flex-positive:${layout.md.grow};flex-grow:${layout.md.grow};max-width:${layout.md.width};-webkit-flex-basis:${layout.md.basis};-ms-flex-preferred-size:${layout.md.basis};flex-basis:${layout.md.basis};${layout.md.display};}}@media only screen and (min-width:${theme.breakpoints.lg.min}){.lg.__jsx-style-dynamic-selector{-webkit-box-flex:${layout.lg.grow};-webkit-flex-grow:${layout.lg.grow};-ms-flex-positive:${layout.lg.grow};flex-grow:${layout.lg.grow};max-width:${layout.lg.width};-webkit-flex-basis:${layout.lg.basis};-ms-flex-preferred-size:${layout.lg.basis};flex-basis:${layout.lg.basis};${layout.lg.display};}}@media only screen and (min-width:${theme.breakpoints.xl.min}){.xl.__jsx-style-dynamic-selector{-webkit-box-flex:${layout.xl.grow};-webkit-flex-grow:${layout.xl.grow};-ms-flex-positive:${layout.xl.grow};flex-grow:${layout.xl.grow};max-width:${layout.xl.width};-webkit-flex-basis:${layout.xl.basis};-ms-flex-preferred-size:${layout.xl.basis};flex-basis:${layout.xl.basis};${layout.xl.display};}}`
    })]
  });
};

GridBasicItem.defaultProps = defaultProps;
export default /*#__PURE__*/React.memo(GridBasicItem);