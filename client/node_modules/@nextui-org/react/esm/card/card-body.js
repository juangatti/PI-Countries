import _JSXStyle from "styled-jsx/style";
import React, { useMemo, useContext } from 'react';
import useTheme from '../use-theme';
import { CardContext } from './card-context';
import clsx from '../utils/clsx';
import withDefaults from '../utils/with-defaults';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
const defaultProps = {
  width: '100%',
  height: 'auto',
  justify: 'inherit',
  alignItems: 'inherit',
  alignContent: 'inherit',
  direction: 'column',
  noPadding: false,
  className: ''
};

const CardBody = ({
  className,
  justify,
  alignContent,
  alignItems,
  noPadding: noPaddingProp,
  direction,
  width,
  height,
  children,
  ...props
}) => {
  const theme = useTheme();
  const {
    noPadding: noPaddingContext
  } = useContext(CardContext);
  const noPadding = useMemo(() => {
    return noPaddingContext !== undefined ? noPaddingContext : noPaddingProp;
  }, [noPaddingProp, noPaddingContext]);
  return /*#__PURE__*/_jsxs("div", { ...props,
    className: _JSXStyle.dynamic([["3689227210", [width, height, direction, justify, alignItems, alignContent, theme.layout.gapHalf, theme.layout.gap]]]) + " " + (props && props.className != null && props.className || clsx('card-body', {
      'no-padding': noPadding
    }, className) || ""),
    children: [children, /*#__PURE__*/_jsx(_JSXStyle, {
      id: "3689227210",
      dynamic: [width, height, direction, justify, alignItems, alignContent, theme.layout.gapHalf, theme.layout.gap],
      children: `.card-body.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;width:${width};height:${height};-webkit-flex-direction:${direction};-ms-flex-direction:${direction};flex-direction:${direction};-webkit-box-pack:${justify};-webkit-justify-content:${justify};-ms-flex-pack:${justify};justify-content:${justify};-webkit-align-items:${alignItems};-webkit-box-align:${alignItems};-ms-flex-align:${alignItems};align-items:${alignItems};-webkit-align-content:${alignContent};-ms-flex-line-pack:${alignContent};align-content:${alignContent};padding:${theme.layout.gapHalf} calc(${theme.layout.gap} + 0.25rem);overflow-y:auto;position:relative;text-align:left;}.card-body.no-padding.__jsx-style-dynamic-selector{padding:0;}.card-body.__jsx-style-dynamic-selector>*:first-child{margin-top:0;}.card-body.__jsx-style-dynamic-selector>*:last-child{margin-bottom:0;}`
    })]
  });
};

const MemoCardBody = /*#__PURE__*/React.memo(CardBody);
export default withDefaults(MemoCardBody, defaultProps);