import React from 'react';
import { TriggerTypes, Placement, SimpleColors, TooltipColors } from '../utils/prop-types';
export declare type TooltipOnVisibleChange = (visible: boolean) => void;
interface Props {
    content: string | React.ReactNode;
    color?: TooltipColors | string;
    contentColor?: SimpleColors | string;
    placement?: Placement;
    visible?: boolean;
    shadow?: boolean;
    rounded?: boolean;
    initialVisible?: boolean;
    hideArrow?: boolean;
    trigger?: TriggerTypes;
    enterDelay?: number;
    leaveDelay?: number;
    offset?: number;
    className?: string;
    portalClassName?: string;
    onVisibleChange?: TooltipOnVisibleChange;
}
declare const defaultProps: {
    initialVisible: boolean;
    hideArrow: boolean;
    shadow: boolean;
    rounded: boolean;
    color: string;
    contentColor: string;
    trigger: "hover" | "click";
    placement: "top" | "topStart" | "topEnd" | "left" | "leftStart" | "leftEnd" | "bottom" | "bottomStart" | "bottomEnd" | "right" | "rightStart" | "rightEnd";
    enterDelay: number;
    leaveDelay: number;
    offset: number;
    className: string;
    portalClassName: string;
    onVisibleChange: TooltipOnVisibleChange;
};
declare type NativeAttrs = Omit<React.HTMLAttributes<any>, keyof Props>;
export declare type TooltipProps = Props & typeof defaultProps & NativeAttrs;
declare const _default: React.ComponentType<Partial<{
    initialVisible: boolean;
    hideArrow: boolean;
    shadow: boolean;
    rounded: boolean;
    color: string;
    contentColor: string;
    trigger: "hover" | "click";
    placement: "top" | "topStart" | "topEnd" | "left" | "leftStart" | "leftEnd" | "bottom" | "bottomStart" | "bottomEnd" | "right" | "rightStart" | "rightEnd";
    enterDelay: number;
    leaveDelay: number;
    offset: number;
    className: string;
    portalClassName: string;
    onVisibleChange: TooltipOnVisibleChange;
}> & Omit<React.PropsWithChildren<TooltipProps>, "rounded" | "className" | "color" | "shadow" | "offset" | "placement" | "contentColor" | "hideArrow" | "initialVisible" | "trigger" | "enterDelay" | "leaveDelay" | "portalClassName" | "onVisibleChange">>;
export default _default;
