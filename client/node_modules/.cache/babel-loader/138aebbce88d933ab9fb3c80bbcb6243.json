{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport withDefaults from '../utils/with-defaults';\nconst defaultProps = {\n  visible: false,\n  enterTime: 60,\n  leaveTime: 60,\n  clearTime: 60,\n  className: '',\n  name: 'transition'\n};\n\nconst CSSTransition = ({\n  children,\n  className,\n  visible,\n  enterTime,\n  leaveTime,\n  clearTime,\n  name,\n  ...props\n}) => {\n  const [classes, setClasses] = useState('');\n  const [renderable, setRenderable] = useState(visible);\n  useEffect(() => {\n    const statusClassName = visible ? 'enter' : 'leave';\n    const time = visible ? enterTime : leaveTime;\n\n    if (visible && !renderable) {\n      setRenderable(true);\n    }\n\n    setClasses(`${name}-${statusClassName}`); // set class to active\n\n    const timer = setTimeout(() => {\n      setClasses(`${name}-${statusClassName} ${name}-${statusClassName}-active`);\n      clearTimeout(timer);\n    }, time); // remove classess when animation over\n\n    const clearClassesTimer = setTimeout(() => {\n      if (!visible) {\n        setClasses('');\n        setRenderable(false);\n      }\n\n      clearTimeout(clearClassesTimer);\n    }, time + clearTime);\n    return () => {\n      clearTimeout(timer);\n      clearTimeout(clearClassesTimer);\n    };\n  }, [visible, renderable]);\n  if (! /*#__PURE__*/React.isValidElement(children) || !renderable) return null;\n  return /*#__PURE__*/React.cloneElement(children, { ...props,\n    className: `${children.props.className} ${className} ${classes}`\n  });\n};\n\nexport default withDefaults(CSSTransition, defaultProps);","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/PI Countries/PI-Countries/PI-Countries/client/node_modules/@nextui-org/react/esm/utils/css-transition.js"],"names":["React","useEffect","useState","withDefaults","defaultProps","visible","enterTime","leaveTime","clearTime","className","name","CSSTransition","children","props","classes","setClasses","renderable","setRenderable","statusClassName","time","timer","setTimeout","clearTimeout","clearClassesTimer","isValidElement","cloneElement"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,SAAS,EAAE,EAHQ;AAInBC,EAAAA,SAAS,EAAE,EAJQ;AAKnBC,EAAAA,SAAS,EAAE,EALQ;AAMnBC,EAAAA,IAAI,EAAE;AANa,CAArB;;AASA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,QADqB;AAErBH,EAAAA,SAFqB;AAGrBJ,EAAAA,OAHqB;AAIrBC,EAAAA,SAJqB;AAKrBC,EAAAA,SALqB;AAMrBC,EAAAA,SANqB;AAOrBE,EAAAA,IAPqB;AAQrB,KAAGG;AARkB,CAAD,KAShB;AACJ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAACG,OAAD,CAA5C;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,eAAe,GAAGb,OAAO,GAAG,OAAH,GAAa,OAA5C;AACA,UAAMc,IAAI,GAAGd,OAAO,GAAGC,SAAH,GAAeC,SAAnC;;AAEA,QAAIF,OAAO,IAAI,CAACW,UAAhB,EAA4B;AAC1BC,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AAEDF,IAAAA,UAAU,CAAE,GAAEL,IAAK,IAAGQ,eAAgB,EAA5B,CAAV,CARc,CAQ4B;;AAE1C,UAAME,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BN,MAAAA,UAAU,CAAE,GAAEL,IAAK,IAAGQ,eAAgB,IAAGR,IAAK,IAAGQ,eAAgB,SAAvD,CAAV;AACAI,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACD,KAHuB,EAGrBD,IAHqB,CAAxB,CAVc,CAaJ;;AAEV,UAAMI,iBAAiB,GAAGF,UAAU,CAAC,MAAM;AACzC,UAAI,CAAChB,OAAL,EAAc;AACZU,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AAEDK,MAAAA,YAAY,CAACC,iBAAD,CAAZ;AACD,KAPmC,EAOjCJ,IAAI,GAAGX,SAP0B,CAApC;AAQA,WAAO,MAAM;AACXc,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAACC,iBAAD,CAAZ;AACD,KAHD;AAID,GA3BQ,EA2BN,CAAClB,OAAD,EAAUW,UAAV,CA3BM,CAAT;AA4BA,MAAI,EAAE,aAAahB,KAAK,CAACwB,cAAN,CAAqBZ,QAArB,CAAf,IAAiD,CAACI,UAAtD,EAAkE,OAAO,IAAP;AAClE,SAAO,aAAahB,KAAK,CAACyB,YAAN,CAAmBb,QAAnB,EAA6B,EAAE,GAAGC,KAAL;AAC/CJ,IAAAA,SAAS,EAAG,GAAEG,QAAQ,CAACC,KAAT,CAAeJ,SAAU,IAAGA,SAAU,IAAGK,OAAQ;AADhB,GAA7B,CAApB;AAGD,CA5CD;;AA8CA,eAAeX,YAAY,CAACQ,aAAD,EAAgBP,YAAhB,CAA3B","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport withDefaults from '../utils/with-defaults';\nconst defaultProps = {\n  visible: false,\n  enterTime: 60,\n  leaveTime: 60,\n  clearTime: 60,\n  className: '',\n  name: 'transition'\n};\n\nconst CSSTransition = ({\n  children,\n  className,\n  visible,\n  enterTime,\n  leaveTime,\n  clearTime,\n  name,\n  ...props\n}) => {\n  const [classes, setClasses] = useState('');\n  const [renderable, setRenderable] = useState(visible);\n  useEffect(() => {\n    const statusClassName = visible ? 'enter' : 'leave';\n    const time = visible ? enterTime : leaveTime;\n\n    if (visible && !renderable) {\n      setRenderable(true);\n    }\n\n    setClasses(`${name}-${statusClassName}`); // set class to active\n\n    const timer = setTimeout(() => {\n      setClasses(`${name}-${statusClassName} ${name}-${statusClassName}-active`);\n      clearTimeout(timer);\n    }, time); // remove classess when animation over\n\n    const clearClassesTimer = setTimeout(() => {\n      if (!visible) {\n        setClasses('');\n        setRenderable(false);\n      }\n\n      clearTimeout(clearClassesTimer);\n    }, time + clearTime);\n    return () => {\n      clearTimeout(timer);\n      clearTimeout(clearClassesTimer);\n    };\n  }, [visible, renderable]);\n  if (! /*#__PURE__*/React.isValidElement(children) || !renderable) return null;\n  return /*#__PURE__*/React.cloneElement(children, { ...props,\n    className: `${children.props.className} ${className} ${classes}`\n  });\n};\n\nexport default withDefaults(CSSTransition, defaultProps);"]},"metadata":{},"sourceType":"module"}