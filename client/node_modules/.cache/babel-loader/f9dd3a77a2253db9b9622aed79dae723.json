{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ALL, GET_COUNTRY_ID, GET_COUNTRY, ORDER_AZ, ORDER_ZA, ORDER_MAY_TO_MEN, ORDER_MEN_TO_MAY, BY_CONTINENT } from \"./constantes\";\nimport { URL_COUNTRIES, URL_ACTIVITY } from \"../urlsconst\";\nexport function getAll() {\n  return async dispatch => {\n    const prome = await axios.get(URL_COUNTRIES);\n    dispatch({\n      type: GET_ALL,\n      payload: prome.data\n    });\n  };\n}\nexport function getCountryDetail(id) {\n  return async dispatch => {\n    const prome = await axios.get(URL_COUNTRIES + `/${id}`);\n    dispatch({\n      type: GET_COUNTRY_ID,\n      payload: prome.data\n    });\n  };\n}\nexport function getAllNames(name) {\n  return async dispatch => {\n    try {\n      const prome = await axios.get(`http://localhost:3001/countries?name=${name}`);\n      dispatch({\n        type: GET_COUNTRY,\n        payload: prome.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function createActivity(activity) {\n  return async function () {\n    try {\n      const newActivity = await axios.post(URL_ACTIVITY, activity);\n      console.log(newActivity);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function orderByAz() {\n  return {\n    type: ORDER_AZ\n  };\n}\nexport function orderByZa() {\n  return {\n    type: ORDER_ZA\n  };\n}\nexport function orderByMayToMen() {\n  return {\n    type: ORDER_MAY_TO_MEN\n  };\n}\nexport function orderByMenToMay() {\n  return {\n    type: ORDER_MEN_TO_MAY\n  };\n}\nexport function filterByContinent(payload) {\n  return {\n    type: BY_CONTINENT,\n    payload\n  };\n}","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/PI Countries/PI-Countries/PI-Countries/client/src/actions/actions.js"],"names":["axios","GET_ALL","GET_COUNTRY_ID","GET_COUNTRY","ORDER_AZ","ORDER_ZA","ORDER_MAY_TO_MEN","ORDER_MEN_TO_MAY","BY_CONTINENT","URL_COUNTRIES","URL_ACTIVITY","getAll","dispatch","prome","get","type","payload","data","getCountryDetail","id","getAllNames","name","error","console","log","createActivity","activity","newActivity","post","orderByAz","orderByZa","orderByMayToMen","orderByMenToMay","filterByContinent"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,cAAlB,EAAkCC,WAAlC,EAAgDC,QAAhD,EAA0DC,QAA1D,EAAoEC,gBAApE,EAAsFC,gBAAtF,EAAuGC,YAAvG,QAA4H,cAA5H;AACA,SAASC,aAAT,EAAyBC,YAAzB,QAA6C,cAA7C;AAIA,OAAO,SAASC,MAAT,GAAiB;AACpB,SAAQ,MAAOC,QAAP,IAAmB;AACvB,UAAMC,KAAK,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUL,aAAV,CAApB;AACAG,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEd,OAAP;AAAgBe,MAAAA,OAAO,EAAEH,KAAK,CAACI;AAA/B,KAAD,CAAR;AAEH,GAJD;AAKH;AAED,OAAO,SAASC,gBAAT,CAA0BC,EAA1B,EAA6B;AAChC,SAAQ,MAAOP,QAAP,IAAmB;AACvB,UAAMC,KAAK,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUL,aAAa,GAAI,IAAGU,EAAG,EAAjC,CAApB;AACAP,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEb,cAAP;AAAuBc,MAAAA,OAAO,EAAEH,KAAK,CAACI;AAAtC,KAAD,CAAR;AAEH,GAJD;AAKH;AAGD,OAAO,SAASG,WAAT,CAAqBC,IAArB,EAA0B;AAC7B,SAAO,MAAOT,QAAP,IAAoB;AACvB,QAAG;AACC,YAAMC,KAAK,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,wCAAuCO,IAAK,EAAvD,CAApB;AACAT,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAEZ,WAAP;AAAoBa,QAAAA,OAAO,EAAEH,KAAK,CAACI;AAAnC,OAAD,CAAR;AACH,KAHD,CAGC,OAAMK,KAAN,EAAY;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAPD;AAQH;AAED,OAAO,SAASG,cAAT,CAAwBC,QAAxB,EAAiC;AACpC,SAAO,kBAAiB;AACpB,QAAG;AACC,YAAMC,WAAW,GAAG,MAAM3B,KAAK,CAAC4B,IAAN,CAAWlB,YAAX,EAAyBgB,QAAzB,CAA1B;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYG,WAAZ;AACH,KAHD,CAGC,OAAML,KAAN,EAAY;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAPD;AAQH;AAQD,OAAO,SAASO,SAAT,GAAoB;AACvB,SAAM;AACFd,IAAAA,IAAI,EAAEX;AADJ,GAAN;AAGH;AAED,OAAO,SAAS0B,SAAT,GAAoB;AACvB,SAAM;AACFf,IAAAA,IAAI,EAAEV;AADJ,GAAN;AAGH;AAED,OAAO,SAAS0B,eAAT,GAA0B;AAC7B,SAAM;AACFhB,IAAAA,IAAI,EAAET;AADJ,GAAN;AAGH;AAED,OAAO,SAAS0B,eAAT,GAA0B;AAC7B,SAAM;AACFjB,IAAAA,IAAI,EAAER;AADJ,GAAN;AAGH;AAED,OAAO,SAAS0B,iBAAT,CAA2BjB,OAA3B,EAAmC;AACtC,SAAM;AACFD,IAAAA,IAAI,EAACP,YADH;AAEFQ,IAAAA;AAFE,GAAN;AAIH","sourcesContent":["import axios from \"axios\"\r\nimport { GET_ALL, GET_COUNTRY_ID, GET_COUNTRY , ORDER_AZ, ORDER_ZA, ORDER_MAY_TO_MEN, ORDER_MEN_TO_MAY,BY_CONTINENT, } from \"./constantes\"\r\nimport { URL_COUNTRIES , URL_ACTIVITY } from \"../urlsconst\"\r\n\r\n\r\n\r\nexport function getAll(){\r\n    return  async (dispatch) =>{\r\n        const prome = await axios.get(URL_COUNTRIES)\r\n        dispatch({type: GET_ALL, payload: prome.data})\r\n        \r\n    }\r\n}\r\n\r\nexport function getCountryDetail(id){\r\n    return  async (dispatch) =>{\r\n        const prome = await axios.get(URL_COUNTRIES + `/${id}`)\r\n        dispatch({type: GET_COUNTRY_ID, payload: prome.data})\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport function getAllNames(name){\r\n    return async (dispatch) => {\r\n        try{\r\n            const prome = await axios.get(`http://localhost:3001/countries?name=${name}`)\r\n            dispatch({type: GET_COUNTRY, payload: prome.data})\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    };\r\n}\r\n\r\nexport function createActivity(activity){\r\n    return async function() {\r\n        try{\r\n            const newActivity = await axios.post(URL_ACTIVITY, activity)\r\n            console.log(newActivity)\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function orderByAz(){\r\n    return{\r\n        type: ORDER_AZ\r\n    }\r\n}\r\n\r\nexport function orderByZa(){\r\n    return{\r\n        type: ORDER_ZA\r\n    }\r\n}\r\n\r\nexport function orderByMayToMen(){\r\n    return{\r\n        type: ORDER_MAY_TO_MEN\r\n    }\r\n}\r\n\r\nexport function orderByMenToMay(){\r\n    return{\r\n        type: ORDER_MEN_TO_MAY\r\n    }\r\n}\r\n\r\nexport function filterByContinent(payload){\r\n    return{\r\n        type:BY_CONTINENT,\r\n        payload\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}