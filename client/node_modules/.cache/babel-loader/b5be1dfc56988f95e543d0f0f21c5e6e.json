{"ast":null,"code":"import React from 'react';\nimport useTheme from '../use-theme';\nimport ThemeContext from './theme-context';\nimport { getThemeByType, mergeTheme, switchTheme } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst ThemeProvider = ({\n  children,\n  theme\n}) => {\n  const customTheme = theme;\n  const currentTheme = useTheme();\n  const baseTheme = customTheme.type ? getThemeByType(customTheme.type) : currentTheme;\n  const merged = mergeTheme(baseTheme, customTheme);\n  const userTheme = currentTheme.type !== merged.type ? switchTheme(merged) : merged;\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: userTheme,\n    children: children\n  });\n};\n\nexport default ThemeProvider;","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/PI Countries/PI-Countries/PI-Countries/client/node_modules/@nextui-org/react/esm/theme/theme-provider.js"],"names":["React","useTheme","ThemeContext","getThemeByType","mergeTheme","switchTheme","jsx","_jsx","ThemeProvider","children","theme","customTheme","currentTheme","baseTheme","type","merged","userTheme","Provider","value"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,WAArC,QAAwD,SAAxD;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,QADqB;AAErBC,EAAAA;AAFqB,CAAD,KAGhB;AACJ,QAAMC,WAAW,GAAGD,KAApB;AACA,QAAME,YAAY,GAAGX,QAAQ,EAA7B;AACA,QAAMY,SAAS,GAAGF,WAAW,CAACG,IAAZ,GAAmBX,cAAc,CAACQ,WAAW,CAACG,IAAb,CAAjC,GAAsDF,YAAxE;AACA,QAAMG,MAAM,GAAGX,UAAU,CAACS,SAAD,EAAYF,WAAZ,CAAzB;AACA,QAAMK,SAAS,GAAGJ,YAAY,CAACE,IAAb,KAAsBC,MAAM,CAACD,IAA7B,GAAoCT,WAAW,CAACU,MAAD,CAA/C,GAA0DA,MAA5E;AACA,SAAO,aAAaR,IAAI,CAACL,YAAY,CAACe,QAAd,EAAwB;AAC9CC,IAAAA,KAAK,EAAEF,SADuC;AAE9CP,IAAAA,QAAQ,EAAEA;AAFoC,GAAxB,CAAxB;AAID,CAbD;;AAeA,eAAeD,aAAf","sourcesContent":["import React from 'react';\nimport useTheme from '../use-theme';\nimport ThemeContext from './theme-context';\nimport { getThemeByType, mergeTheme, switchTheme } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst ThemeProvider = ({\n  children,\n  theme\n}) => {\n  const customTheme = theme;\n  const currentTheme = useTheme();\n  const baseTheme = customTheme.type ? getThemeByType(customTheme.type) : currentTheme;\n  const merged = mergeTheme(baseTheme, customTheme);\n  const userTheme = currentTheme.type !== merged.type ? switchTheme(merged) : merged;\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: userTheme,\n    children: children\n  });\n};\n\nexport default ThemeProvider;"]},"metadata":{},"sourceType":"module"}