{"ast":null,"code":"import React, { useMemo } from 'react';\nimport withDefaults from '../utils/with-defaults';\nimport TextChild from './child';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  h1: false,\n  h2: false,\n  h3: false,\n  h4: false,\n  h5: false,\n  h6: false,\n  p: false,\n  b: false,\n  small: false,\n  transform: 'none',\n  i: false,\n  span: false,\n  del: false,\n  em: false,\n  blockquote: false,\n  weight: 'noset',\n  className: '',\n  color: 'default'\n};\n\nconst getModifierChild = (tags, children, size, transform) => {\n  if (!tags.length) return children;\n  const nextTag = tags.slice(1, tags.length);\n  return /*#__PURE__*/_jsx(TextChild, {\n    tag: tags[0],\n    size: size,\n    transform: transform,\n    children: getModifierChild(nextTag, children, size)\n  });\n};\n\nconst Text = ({\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  b,\n  small,\n  i,\n  span,\n  del,\n  em,\n  blockquote,\n  transform,\n  size,\n  margin,\n  weight,\n  children,\n  className,\n  ...props\n}) => {\n  const elements = {\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    p,\n    blockquote\n  };\n  const inlineElements = {\n    span,\n    small,\n    b,\n    em,\n    i,\n    del\n  };\n  const names = Object.keys(elements).filter(name => elements[name]);\n  const inlineNames = Object.keys(inlineElements).filter(name => inlineElements[name]);\n  /**\n   *  Render element \"p\" only if no element is found.\n   *  If there is only one modifier, just rendered one modifier element\n   *  e.g.\n   *    <Text /> => <p />\n   *    <Text em /> => <em />\n   *    <Text p em /> => <p><em>children</em></p>\n   *\n   */\n\n  const tag = useMemo(() => {\n    if (names[0]) return names[0];\n    if (inlineNames[0]) return inlineNames[0];\n    return 'p';\n  }, [names, inlineNames]);\n  const renderableChildElements = inlineNames.filter(name => name !== tag);\n  const modifers = useMemo(() => {\n    if (!renderableChildElements.length) return children;\n    return getModifierChild(renderableChildElements, children, size, transform);\n  }, [renderableChildElements, children, size, transform]);\n  return /*#__PURE__*/_jsx(TextChild, {\n    className: className,\n    transform: transform,\n    tag: tag,\n    margin: margin,\n    size: size,\n    weight: weight,\n    ...props,\n    children: modifers\n  });\n};\n\nconst MemoText = /*#__PURE__*/React.memo(Text);\nexport default withDefaults(MemoText, defaultProps);","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/PI Countries/PI-Countries/PI-Countries/client/node_modules/@nextui-org/react/esm/text/text.js"],"names":["React","useMemo","withDefaults","TextChild","jsx","_jsx","defaultProps","h1","h2","h3","h4","h5","h6","p","b","small","transform","i","span","del","em","blockquote","weight","className","color","getModifierChild","tags","children","size","length","nextTag","slice","tag","Text","margin","props","elements","inlineElements","names","Object","keys","filter","name","inlineNames","renderableChildElements","modifers","MemoText","memo"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport withDefaults from '../utils/with-defaults';\nimport TextChild from './child';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  h1: false,\n  h2: false,\n  h3: false,\n  h4: false,\n  h5: false,\n  h6: false,\n  p: false,\n  b: false,\n  small: false,\n  transform: 'none',\n  i: false,\n  span: false,\n  del: false,\n  em: false,\n  blockquote: false,\n  weight: 'noset',\n  className: '',\n  color: 'default'\n};\n\nconst getModifierChild = (tags, children, size, transform) => {\n  if (!tags.length) return children;\n  const nextTag = tags.slice(1, tags.length);\n  return /*#__PURE__*/_jsx(TextChild, {\n    tag: tags[0],\n    size: size,\n    transform: transform,\n    children: getModifierChild(nextTag, children, size)\n  });\n};\n\nconst Text = ({\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  b,\n  small,\n  i,\n  span,\n  del,\n  em,\n  blockquote,\n  transform,\n  size,\n  margin,\n  weight,\n  children,\n  className,\n  ...props\n}) => {\n  const elements = {\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    p,\n    blockquote\n  };\n  const inlineElements = {\n    span,\n    small,\n    b,\n    em,\n    i,\n    del\n  };\n  const names = Object.keys(elements).filter(name => elements[name]);\n  const inlineNames = Object.keys(inlineElements).filter(name => inlineElements[name]);\n  /**\n   *  Render element \"p\" only if no element is found.\n   *  If there is only one modifier, just rendered one modifier element\n   *  e.g.\n   *    <Text /> => <p />\n   *    <Text em /> => <em />\n   *    <Text p em /> => <p><em>children</em></p>\n   *\n   */\n\n  const tag = useMemo(() => {\n    if (names[0]) return names[0];\n    if (inlineNames[0]) return inlineNames[0];\n    return 'p';\n  }, [names, inlineNames]);\n  const renderableChildElements = inlineNames.filter(name => name !== tag);\n  const modifers = useMemo(() => {\n    if (!renderableChildElements.length) return children;\n    return getModifierChild(renderableChildElements, children, size, transform);\n  }, [renderableChildElements, children, size, transform]);\n  return /*#__PURE__*/_jsx(TextChild, {\n    className: className,\n    transform: transform,\n    tag: tag,\n    margin: margin,\n    size: size,\n    weight: weight,\n    ...props,\n    children: modifers\n  });\n};\n\nconst MemoText = /*#__PURE__*/React.memo(Text);\nexport default withDefaults(MemoText, defaultProps);"]},"metadata":{},"sourceType":"module"}