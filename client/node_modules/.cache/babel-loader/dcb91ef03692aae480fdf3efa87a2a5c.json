{"ast":null,"code":"import { isMac } from '../utils/collections';\nimport { KeyMod } from './codes';\n/* istanbul ignore next */\n\nexport const getCtrlKeysByPlatform = () => {\n  return {\n    CtrlCmd: isMac() ? 'metaKey' : 'ctrlKey',\n    WinCtrl: isMac() ? 'ctrlKey' : 'metaKey'\n  };\n};\nexport const getActiveModMap = bindings => {\n  const modBindings = bindings.filter(item => !!KeyMod[item]);\n  const activeModMap = {\n    CtrlCmd: false,\n    Shift: false,\n    Alt: false,\n    WinCtrl: false\n  };\n  modBindings.forEach(code => {\n    const modKey = KeyMod[code];\n    activeModMap[modKey] = true;\n  });\n  return activeModMap;\n};","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/PI Countries/PI-Countries/PI-Countries/client/node_modules/@nextui-org/react/esm/use-keyboard/helper.js"],"names":["isMac","KeyMod","getCtrlKeysByPlatform","CtrlCmd","WinCtrl","getActiveModMap","bindings","modBindings","filter","item","activeModMap","Shift","Alt","forEach","code","modKey"],"mappings":"AAAA,SAASA,KAAT,QAAsB,sBAAtB;AACA,SAASC,MAAT,QAAuB,SAAvB;AACA;;AAEA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACzC,SAAO;AACLC,IAAAA,OAAO,EAAEH,KAAK,KAAK,SAAL,GAAiB,SAD1B;AAELI,IAAAA,OAAO,EAAEJ,KAAK,KAAK,SAAL,GAAiB;AAF1B,GAAP;AAID,CALM;AAMP,OAAO,MAAMK,eAAe,GAAGC,QAAQ,IAAI;AACzC,QAAMC,WAAW,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,IAAI,IAAI,CAAC,CAACR,MAAM,CAACQ,IAAD,CAAhC,CAApB;AACA,QAAMC,YAAY,GAAG;AACnBP,IAAAA,OAAO,EAAE,KADU;AAEnBQ,IAAAA,KAAK,EAAE,KAFY;AAGnBC,IAAAA,GAAG,EAAE,KAHc;AAInBR,IAAAA,OAAO,EAAE;AAJU,GAArB;AAMAG,EAAAA,WAAW,CAACM,OAAZ,CAAoBC,IAAI,IAAI;AAC1B,UAAMC,MAAM,GAAGd,MAAM,CAACa,IAAD,CAArB;AACAJ,IAAAA,YAAY,CAACK,MAAD,CAAZ,GAAuB,IAAvB;AACD,GAHD;AAIA,SAAOL,YAAP;AACD,CAbM","sourcesContent":["import { isMac } from '../utils/collections';\nimport { KeyMod } from './codes';\n/* istanbul ignore next */\n\nexport const getCtrlKeysByPlatform = () => {\n  return {\n    CtrlCmd: isMac() ? 'metaKey' : 'ctrlKey',\n    WinCtrl: isMac() ? 'ctrlKey' : 'metaKey'\n  };\n};\nexport const getActiveModMap = bindings => {\n  const modBindings = bindings.filter(item => !!KeyMod[item]);\n  const activeModMap = {\n    CtrlCmd: false,\n    Shift: false,\n    Alt: false,\n    WinCtrl: false\n  };\n  modBindings.forEach(code => {\n    const modKey = KeyMod[code];\n    activeModMap[modKey] = true;\n  });\n  return activeModMap;\n};"]},"metadata":{},"sourceType":"module"}