{"ast":null,"code":"export const isObject = target => target && typeof target === 'object';\nexport const deepMergeObject = (source, target) => {\n  if (!isObject(target) || !isObject(source)) return source;\n  const sourceKeys = Object.keys(source);\n  let result = {};\n\n  for (const key of sourceKeys) {\n    const sourceValue = source[key];\n    const targetValue = target[key];\n\n    if (Array.isArray(sourceValue) && Array.isArray(targetValue)) {\n      result[key] = targetValue.concat(sourceValue);\n    } else if (isObject(sourceValue) && isObject(targetValue)) {\n      result[key] = deepMergeObject(sourceValue, { ...targetValue\n      });\n    } else if (targetValue) {\n      result[key] = targetValue;\n    } else {\n      result[key] = sourceValue;\n    }\n  }\n\n  return result;\n};","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/PI Countries/PI-Countries/PI-Countries/client/node_modules/@nextui-org/react/esm/utils/object.js"],"names":["isObject","target","deepMergeObject","source","sourceKeys","Object","keys","result","key","sourceValue","targetValue","Array","isArray","concat"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAGC,MAAM,IAAIA,MAAM,IAAI,OAAOA,MAAP,KAAkB,QAAvD;AACP,OAAO,MAAMC,eAAe,GAAG,CAACC,MAAD,EAASF,MAAT,KAAoB;AACjD,MAAI,CAACD,QAAQ,CAACC,MAAD,CAAT,IAAqB,CAACD,QAAQ,CAACG,MAAD,CAAlC,EAA4C,OAAOA,MAAP;AAC5C,QAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,CAAnB;AACA,MAAII,MAAM,GAAG,EAAb;;AAEA,OAAK,MAAMC,GAAX,IAAkBJ,UAAlB,EAA8B;AAC5B,UAAMK,WAAW,GAAGN,MAAM,CAACK,GAAD,CAA1B;AACA,UAAME,WAAW,GAAGT,MAAM,CAACO,GAAD,CAA1B;;AAEA,QAAIG,KAAK,CAACC,OAAN,CAAcH,WAAd,KAA8BE,KAAK,CAACC,OAAN,CAAcF,WAAd,CAAlC,EAA8D;AAC5DH,MAAAA,MAAM,CAACC,GAAD,CAAN,GAAcE,WAAW,CAACG,MAAZ,CAAmBJ,WAAnB,CAAd;AACD,KAFD,MAEO,IAAIT,QAAQ,CAACS,WAAD,CAAR,IAAyBT,QAAQ,CAACU,WAAD,CAArC,EAAoD;AACzDH,MAAAA,MAAM,CAACC,GAAD,CAAN,GAAcN,eAAe,CAACO,WAAD,EAAc,EAAE,GAAGC;AAAL,OAAd,CAA7B;AAED,KAHM,MAGA,IAAIA,WAAJ,EAAiB;AACtBH,MAAAA,MAAM,CAACC,GAAD,CAAN,GAAcE,WAAd;AACD,KAFM,MAEA;AACLH,MAAAA,MAAM,CAACC,GAAD,CAAN,GAAcC,WAAd;AACD;AACF;;AAED,SAAOF,MAAP;AACD,CAtBM","sourcesContent":["export const isObject = target => target && typeof target === 'object';\nexport const deepMergeObject = (source, target) => {\n  if (!isObject(target) || !isObject(source)) return source;\n  const sourceKeys = Object.keys(source);\n  let result = {};\n\n  for (const key of sourceKeys) {\n    const sourceValue = source[key];\n    const targetValue = target[key];\n\n    if (Array.isArray(sourceValue) && Array.isArray(targetValue)) {\n      result[key] = targetValue.concat(sourceValue);\n    } else if (isObject(sourceValue) && isObject(targetValue)) {\n      result[key] = deepMergeObject(sourceValue, { ...targetValue\n      });\n    } else if (targetValue) {\n      result[key] = targetValue;\n    } else {\n      result[key] = sourceValue;\n    }\n  }\n\n  return result;\n};"]},"metadata":{},"sourceType":"module"}