{"ast":null,"code":"export const tuple = (...args) => args;\nconst normalSizes = tuple('mini', 'small', 'medium', 'large', 'xlarge');\nexport const normalColors = tuple('default', 'primary', 'secondary', 'success', 'warning', 'error', 'gradient');\nexport const simpleColors = tuple('default', 'primary', 'secondary', 'success', 'warning', 'error');\nexport const extendedColors = tuple('default', 'primary', 'secondary', 'success', 'warning', 'error', 'invert', 'gradient');\nexport const extraColors = tuple('default', 'primary', 'secondary', 'success', 'warning', 'error', 'dark', 'lite', 'alert', 'purple', 'violet', 'gradient', 'cyan');\nexport const normalLoaders = tuple('default', 'points', 'points-opacity', 'gradient', 'spinner');\nexport const normalWeights = tuple('light', 'normal', 'bold');\nexport const textWeights = tuple(\n/* Keyword values */\n'normal', 'bold',\n/* Keyword values relative to the parent */\n'lighter', 'bolder',\n/* Global values */\n'inherit', 'initial', 'revert', 'unset');\nexport const textTransforms = tuple(\n/* Keyword values */\n'none', 'capitalize', 'uppercase', 'lowercase', 'full-width', 'full-size-kana',\n/* Global values */\n'inherit', 'initial', 'revert', 'unset');\nconst themeTypes = tuple('dark', 'light');\nconst copyTypes = tuple('default', 'slient', 'prevent');\nconst triggerTypes = tuple('hover', 'click');\nconst placement = tuple('top', 'topStart', 'topEnd', 'left', 'leftStart', 'leftEnd', 'bottom', 'bottomStart', 'bottomEnd', 'right', 'rightStart', 'rightEnd');\nconst position = tuple('static', 'relative', 'absolute', 'fixed', 'sticky',\n/* Global values */\n'inherit', 'initial', 'revert', 'unset');\nconst objectFit = tuple('contain', 'cover', 'fill', 'none', 'scale-down',\n/* Global values */\n'inherit', 'initial', 'revert', 'unset');\nconst dividerAlign = tuple('start', 'center', 'end', 'left', 'right');\nconst justify = tuple('flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly');\nconst alignItems = tuple('flex-start', 'flex-end', 'center', 'stretch', 'baseline');\nconst alignContent = tuple('stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around');\nconst direction = tuple('row', 'row-reverse', 'column', 'column-reverse');\nconst wrap = tuple('nowrap', 'wrap', 'wrap-reverse');\nconst display = tuple('flex', 'block', 'grid', 'inline', 'inline-block', 'inline-flex', 'inline-grid');\nconst contentPosition = tuple('left', 'right');\nexport const excludedInputPropsForTextarea = tuple('clearable', 'as', 'rounded', 'labelLeft', 'labelRight', 'contentLeft', 'contentRight', 'contentClickable', 'contentLeftStyling', 'contentRightStyling', 'onContentClick', 'onClearClick');","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/PI Countries/PI-Countries/PI-Countries/client/node_modules/@nextui-org/react/esm/utils/prop-types.js"],"names":["tuple","args","normalSizes","normalColors","simpleColors","extendedColors","extraColors","normalLoaders","normalWeights","textWeights","textTransforms","themeTypes","copyTypes","triggerTypes","placement","position","objectFit","dividerAlign","justify","alignItems","alignContent","direction","wrap","display","contentPosition","excludedInputPropsForTextarea"],"mappings":"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","sourcesContent":["export const tuple = (...args) => args;\nconst normalSizes = tuple('mini', 'small', 'medium', 'large', 'xlarge');\nexport const normalColors = tuple('default', 'primary', 'secondary', 'success', 'warning', 'error', 'gradient');\nexport const simpleColors = tuple('default', 'primary', 'secondary', 'success', 'warning', 'error');\nexport const extendedColors = tuple('default', 'primary', 'secondary', 'success', 'warning', 'error', 'invert', 'gradient');\nexport const extraColors = tuple('default', 'primary', 'secondary', 'success', 'warning', 'error', 'dark', 'lite', 'alert', 'purple', 'violet', 'gradient', 'cyan');\nexport const normalLoaders = tuple('default', 'points', 'points-opacity', 'gradient', 'spinner');\nexport const normalWeights = tuple('light', 'normal', 'bold');\nexport const textWeights = tuple(\n/* Keyword values */\n'normal', 'bold',\n/* Keyword values relative to the parent */\n'lighter', 'bolder',\n/* Global values */\n'inherit', 'initial', 'revert', 'unset');\nexport const textTransforms = tuple(\n/* Keyword values */\n'none', 'capitalize', 'uppercase', 'lowercase', 'full-width', 'full-size-kana',\n/* Global values */\n'inherit', 'initial', 'revert', 'unset');\nconst themeTypes = tuple('dark', 'light');\nconst copyTypes = tuple('default', 'slient', 'prevent');\nconst triggerTypes = tuple('hover', 'click');\nconst placement = tuple('top', 'topStart', 'topEnd', 'left', 'leftStart', 'leftEnd', 'bottom', 'bottomStart', 'bottomEnd', 'right', 'rightStart', 'rightEnd');\nconst position = tuple('static', 'relative', 'absolute', 'fixed', 'sticky',\n/* Global values */\n'inherit', 'initial', 'revert', 'unset');\nconst objectFit = tuple('contain', 'cover', 'fill', 'none', 'scale-down',\n/* Global values */\n'inherit', 'initial', 'revert', 'unset');\nconst dividerAlign = tuple('start', 'center', 'end', 'left', 'right');\nconst justify = tuple('flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly');\nconst alignItems = tuple('flex-start', 'flex-end', 'center', 'stretch', 'baseline');\nconst alignContent = tuple('stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around');\nconst direction = tuple('row', 'row-reverse', 'column', 'column-reverse');\nconst wrap = tuple('nowrap', 'wrap', 'wrap-reverse');\nconst display = tuple('flex', 'block', 'grid', 'inline', 'inline-block', 'inline-flex', 'inline-grid');\nconst contentPosition = tuple('left', 'right');\nexport const excludedInputPropsForTextarea = tuple('clearable', 'as', 'rounded', 'labelLeft', 'labelRight', 'contentLeft', 'contentRight', 'contentClickable', 'contentLeftStyling', 'contentRightStyling', 'onContentClick', 'onClearClick');"]},"metadata":{},"sourceType":"module"}