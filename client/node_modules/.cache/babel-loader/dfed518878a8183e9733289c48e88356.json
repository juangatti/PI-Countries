{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React, { useMemo } from 'react';\nimport withDefaults from '../utils/with-defaults';\nimport useTheme from '../use-theme';\nimport { getNormalColor } from '../utils/color';\nimport clsx from '../utils/clsx';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  color: 'default',\n  className: ''\n};\n\nconst TextChild = ({\n  children,\n  tag,\n  className,\n  color: userColor,\n  transform,\n  margin: marginProp,\n  weight,\n  size,\n  ...props\n}) => {\n  const theme = useTheme();\n  const Component = tag;\n  const color = useMemo(() => getNormalColor(userColor, theme.palette), [userColor, theme.palette]);\n  const fontSize = useMemo(() => {\n    if (!size) return 'inherit';\n    if (typeof size === 'number') return `${size}px`;\n    return size;\n  }, [size]);\n  const margin = useMemo(() => {\n    if (!marginProp) return 'inherit';\n    if (typeof marginProp === 'number') return `${size}px`;\n    return marginProp;\n  }, [marginProp]);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Component, { ...props,\n      className: _JSXStyle.dynamic([[\"2179963912\", [tag, color, margin, weight, transform, fontSize]]]) + \" \" + (props && props.className != null && props.className || clsx({\n        'custom-size': !!size\n      }, className) || \"\"),\n      children: children\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"2179963912\",\n      dynamic: [tag, color, margin, weight, transform, fontSize],\n      children: `${tag}.__jsx-style-dynamic-selector{color:${color};margin:${margin};font-weight:${weight};text-transform:${transform};}.custom-size.__jsx-style-dynamic-selector{font-size:${fontSize};}`\n    })]\n  });\n};\n\nconst MemoTextChild = /*#__PURE__*/React.memo(TextChild);\nexport default withDefaults(MemoTextChild, defaultProps);","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/PI Countries/PI-Countries/PI-Countries/client/node_modules/@nextui-org/react/esm/text/child.js"],"names":["_JSXStyle","React","useMemo","withDefaults","useTheme","getNormalColor","clsx","jsx","_jsx","jsxs","_jsxs","defaultProps","color","className","TextChild","children","tag","userColor","transform","margin","marginProp","weight","size","props","theme","Component","palette","fontSize","Fragment","dynamic","id","MemoTextChild","memo"],"mappings":"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","sourcesContent":["import _JSXStyle from \"styled-jsx/style\";\nimport React, { useMemo } from 'react';\nimport withDefaults from '../utils/with-defaults';\nimport useTheme from '../use-theme';\nimport { getNormalColor } from '../utils/color';\nimport clsx from '../utils/clsx';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  color: 'default',\n  className: ''\n};\n\nconst TextChild = ({\n  children,\n  tag,\n  className,\n  color: userColor,\n  transform,\n  margin: marginProp,\n  weight,\n  size,\n  ...props\n}) => {\n  const theme = useTheme();\n  const Component = tag;\n  const color = useMemo(() => getNormalColor(userColor, theme.palette), [userColor, theme.palette]);\n  const fontSize = useMemo(() => {\n    if (!size) return 'inherit';\n    if (typeof size === 'number') return `${size}px`;\n    return size;\n  }, [size]);\n  const margin = useMemo(() => {\n    if (!marginProp) return 'inherit';\n    if (typeof marginProp === 'number') return `${size}px`;\n    return marginProp;\n  }, [marginProp]);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Component, { ...props,\n      className: _JSXStyle.dynamic([[\"2179963912\", [tag, color, margin, weight, transform, fontSize]]]) + \" \" + (props && props.className != null && props.className || clsx({\n        'custom-size': !!size\n      }, className) || \"\"),\n      children: children\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"2179963912\",\n      dynamic: [tag, color, margin, weight, transform, fontSize],\n      children: `${tag}.__jsx-style-dynamic-selector{color:${color};margin:${margin};font-weight:${weight};text-transform:${transform};}.custom-size.__jsx-style-dynamic-selector{font-size:${fontSize};}`\n    })]\n  });\n};\n\nconst MemoTextChild = /*#__PURE__*/React.memo(TextChild);\nexport default withDefaults(MemoTextChild, defaultProps);"]},"metadata":{},"sourceType":"module"}