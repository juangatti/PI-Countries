{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { CheckboxContext } from './checkbox-context';\nimport useWarning from '../use-warning';\nimport withDefaults from '../utils/with-defaults';\nimport { __DEV__ } from '../utils/assertion';\nimport { getCheckboxSize } from './styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  color: 'primary',\n  textColor: 'default',\n  disabled: false,\n  size: 'medium',\n  className: '',\n  row: false\n};\n\nconst CheckboxGroup = ({\n  color,\n  textColor,\n  disabled,\n  onChange,\n  value,\n  size,\n  row,\n  children,\n  className,\n  ...props\n}) => {\n  const [selfVal, setSelfVal] = useState([]);\n\n  if (!value && __DEV__) {\n    value = [];\n    useWarning('Props \"value\" is required.', 'Checkbox Group');\n  }\n\n  const updateState = (val, checked) => {\n    const removed = selfVal.filter(v => v !== val);\n    const next = checked ? [...removed, val] : removed;\n    setSelfVal(next);\n    onChange && onChange(next);\n  };\n\n  const providerValue = useMemo(() => {\n    return {\n      updateState,\n      color,\n      textColor,\n      disabledAll: disabled,\n      inGroup: true,\n      values: selfVal\n    };\n  }, [disabled, selfVal]);\n  const fontSize = useMemo(() => getCheckboxSize(size), [size]);\n  const groupGap = `calc(${fontSize} * 1)`;\n  useEffect(() => {\n    setSelfVal(value);\n  }, [value.join(',')]);\n  return /*#__PURE__*/_jsx(CheckboxContext.Provider, {\n    value: providerValue,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      role: \"group\",\n      ...props,\n      className: _JSXStyle.dynamic([[\"801134383\", [row ? 0 : groupGap, row ? groupGap : 0, fontSize, row ? 'row' : 'column']]]) + \" \" + (props && props.className != null && props.className || `checkbox-group ${className}`),\n      children: [children, /*#__PURE__*/_jsx(_JSXStyle, {\n        id: \"801134383\",\n        dynamic: [row ? 0 : groupGap, row ? groupGap : 0, fontSize, row ? 'row' : 'column'],\n        children: `.checkbox-group.__jsx-style-dynamic-selector .checkbox{margin-top:${row ? 0 : groupGap};margin-right:${row ? groupGap : 0};--checkbox-size:${fontSize};}.checkbox-group.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:${row ? 'row' : 'column'};-ms-flex-direction:${row ? 'row' : 'column'};flex-direction:${row ? 'row' : 'column'};}`\n      })]\n    })\n  });\n};\n\nexport default withDefaults(CheckboxGroup, defaultProps);","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/PI Countries/PI-Countries/PI-Countries/client/node_modules/@nextui-org/react/esm/checkbox/checkbox-group.js"],"names":["_JSXStyle","React","useEffect","useMemo","useState","CheckboxContext","useWarning","withDefaults","__DEV__","getCheckboxSize","jsx","_jsx","jsxs","_jsxs","defaultProps","color","textColor","disabled","size","className","row","CheckboxGroup","onChange","value","children","props","selfVal","setSelfVal","updateState","val","checked","removed","filter","v","next","providerValue","disabledAll","inGroup","values","fontSize","groupGap","join","Provider","role","dynamic","id"],"mappings":"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","sourcesContent":["import _JSXStyle from \"styled-jsx/style\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { CheckboxContext } from './checkbox-context';\nimport useWarning from '../use-warning';\nimport withDefaults from '../utils/with-defaults';\nimport { __DEV__ } from '../utils/assertion';\nimport { getCheckboxSize } from './styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  color: 'primary',\n  textColor: 'default',\n  disabled: false,\n  size: 'medium',\n  className: '',\n  row: false\n};\n\nconst CheckboxGroup = ({\n  color,\n  textColor,\n  disabled,\n  onChange,\n  value,\n  size,\n  row,\n  children,\n  className,\n  ...props\n}) => {\n  const [selfVal, setSelfVal] = useState([]);\n\n  if (!value && __DEV__) {\n    value = [];\n    useWarning('Props \"value\" is required.', 'Checkbox Group');\n  }\n\n  const updateState = (val, checked) => {\n    const removed = selfVal.filter(v => v !== val);\n    const next = checked ? [...removed, val] : removed;\n    setSelfVal(next);\n    onChange && onChange(next);\n  };\n\n  const providerValue = useMemo(() => {\n    return {\n      updateState,\n      color,\n      textColor,\n      disabledAll: disabled,\n      inGroup: true,\n      values: selfVal\n    };\n  }, [disabled, selfVal]);\n  const fontSize = useMemo(() => getCheckboxSize(size), [size]);\n  const groupGap = `calc(${fontSize} * 1)`;\n  useEffect(() => {\n    setSelfVal(value);\n  }, [value.join(',')]);\n  return /*#__PURE__*/_jsx(CheckboxContext.Provider, {\n    value: providerValue,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      role: \"group\",\n      ...props,\n      className: _JSXStyle.dynamic([[\"801134383\", [row ? 0 : groupGap, row ? groupGap : 0, fontSize, row ? 'row' : 'column']]]) + \" \" + (props && props.className != null && props.className || `checkbox-group ${className}`),\n      children: [children, /*#__PURE__*/_jsx(_JSXStyle, {\n        id: \"801134383\",\n        dynamic: [row ? 0 : groupGap, row ? groupGap : 0, fontSize, row ? 'row' : 'column'],\n        children: `.checkbox-group.__jsx-style-dynamic-selector .checkbox{margin-top:${row ? 0 : groupGap};margin-right:${row ? groupGap : 0};--checkbox-size:${fontSize};}.checkbox-group.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:${row ? 'row' : 'column'};-ms-flex-direction:${row ? 'row' : 'column'};flex-direction:${row ? 'row' : 'column'};}`\n      })]\n    })\n  });\n};\n\nexport default withDefaults(CheckboxGroup, defaultProps);"]},"metadata":{},"sourceType":"module"}