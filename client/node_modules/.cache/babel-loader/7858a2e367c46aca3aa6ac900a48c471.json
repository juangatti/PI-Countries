{"ast":null,"code":"import { hexFromString } from '../utils/color';\nexport const getStyles = (type, palette, fill) => {\n  const styles = {\n    default: {\n      color: palette.foreground,\n      border: palette.border,\n      bgColor: palette.background\n    },\n    primary: {\n      color: palette.foreground,\n      border: palette.border,\n      bgColor: palette.primary\n    },\n    success: {\n      color: palette.success,\n      border: palette.success,\n      bgColor: palette.background\n    },\n    warning: {\n      color: palette.warning,\n      border: palette.warning,\n      bgColor: palette.background\n    },\n    error: {\n      color: palette.error,\n      border: palette.error,\n      bgColor: palette.background\n    },\n    secondary: {\n      color: palette.secondary,\n      border: palette.secondary,\n      bgColor: palette.background\n    },\n    invert: {\n      color: palette.background,\n      border: palette.foreground,\n      bgColor: palette.foreground\n    },\n    gradient: {\n      color: palette.foreground,\n      border: hexFromString(palette.gradient, palette.primary, true),\n      bgColor: palette.gradient\n    }\n  };\n  const filledTypes = ['success', 'warning', 'error', 'secondary'];\n  const style = styles[type];\n  const shouldFilled = filledTypes.includes(type);\n  if (!fill || !shouldFilled) return style;\n  return { ...style,\n    color: style.bgColor,\n    bgColor: style.color\n  };\n};","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/PI Countries/PI-Countries/PI-Countries/client/node_modules/@nextui-org/react/esm/snippet/styles.js"],"names":["hexFromString","getStyles","type","palette","fill","styles","default","color","foreground","border","bgColor","background","primary","success","warning","error","secondary","invert","gradient","filledTypes","style","shouldFilled","includes"],"mappings":"AAAA,SAASA,aAAT,QAA8B,gBAA9B;AACA,OAAO,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,OAAP,EAAgBC,IAAhB,KAAyB;AAChD,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAEJ,OAAO,CAACK,UADR;AAEPC,MAAAA,MAAM,EAAEN,OAAO,CAACM,MAFT;AAGPC,MAAAA,OAAO,EAAEP,OAAO,CAACQ;AAHV,KADI;AAMbC,IAAAA,OAAO,EAAE;AACPL,MAAAA,KAAK,EAAEJ,OAAO,CAACK,UADR;AAEPC,MAAAA,MAAM,EAAEN,OAAO,CAACM,MAFT;AAGPC,MAAAA,OAAO,EAAEP,OAAO,CAACS;AAHV,KANI;AAWbC,IAAAA,OAAO,EAAE;AACPN,MAAAA,KAAK,EAAEJ,OAAO,CAACU,OADR;AAEPJ,MAAAA,MAAM,EAAEN,OAAO,CAACU,OAFT;AAGPH,MAAAA,OAAO,EAAEP,OAAO,CAACQ;AAHV,KAXI;AAgBbG,IAAAA,OAAO,EAAE;AACPP,MAAAA,KAAK,EAAEJ,OAAO,CAACW,OADR;AAEPL,MAAAA,MAAM,EAAEN,OAAO,CAACW,OAFT;AAGPJ,MAAAA,OAAO,EAAEP,OAAO,CAACQ;AAHV,KAhBI;AAqBbI,IAAAA,KAAK,EAAE;AACLR,MAAAA,KAAK,EAAEJ,OAAO,CAACY,KADV;AAELN,MAAAA,MAAM,EAAEN,OAAO,CAACY,KAFX;AAGLL,MAAAA,OAAO,EAAEP,OAAO,CAACQ;AAHZ,KArBM;AA0BbK,IAAAA,SAAS,EAAE;AACTT,MAAAA,KAAK,EAAEJ,OAAO,CAACa,SADN;AAETP,MAAAA,MAAM,EAAEN,OAAO,CAACa,SAFP;AAGTN,MAAAA,OAAO,EAAEP,OAAO,CAACQ;AAHR,KA1BE;AA+BbM,IAAAA,MAAM,EAAE;AACNV,MAAAA,KAAK,EAAEJ,OAAO,CAACQ,UADT;AAENF,MAAAA,MAAM,EAAEN,OAAO,CAACK,UAFV;AAGNE,MAAAA,OAAO,EAAEP,OAAO,CAACK;AAHX,KA/BK;AAoCbU,IAAAA,QAAQ,EAAE;AACRX,MAAAA,KAAK,EAAEJ,OAAO,CAACK,UADP;AAERC,MAAAA,MAAM,EAAET,aAAa,CAACG,OAAO,CAACe,QAAT,EAAmBf,OAAO,CAACS,OAA3B,EAAoC,IAApC,CAFb;AAGRF,MAAAA,OAAO,EAAEP,OAAO,CAACe;AAHT;AApCG,GAAf;AA0CA,QAAMC,WAAW,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,EAAgC,WAAhC,CAApB;AACA,QAAMC,KAAK,GAAGf,MAAM,CAACH,IAAD,CAApB;AACA,QAAMmB,YAAY,GAAGF,WAAW,CAACG,QAAZ,CAAqBpB,IAArB,CAArB;AACA,MAAI,CAACE,IAAD,IAAS,CAACiB,YAAd,EAA4B,OAAOD,KAAP;AAC5B,SAAO,EAAE,GAAGA,KAAL;AACLb,IAAAA,KAAK,EAAEa,KAAK,CAACV,OADR;AAELA,IAAAA,OAAO,EAAEU,KAAK,CAACb;AAFV,GAAP;AAID,CAnDM","sourcesContent":["import { hexFromString } from '../utils/color';\nexport const getStyles = (type, palette, fill) => {\n  const styles = {\n    default: {\n      color: palette.foreground,\n      border: palette.border,\n      bgColor: palette.background\n    },\n    primary: {\n      color: palette.foreground,\n      border: palette.border,\n      bgColor: palette.primary\n    },\n    success: {\n      color: palette.success,\n      border: palette.success,\n      bgColor: palette.background\n    },\n    warning: {\n      color: palette.warning,\n      border: palette.warning,\n      bgColor: palette.background\n    },\n    error: {\n      color: palette.error,\n      border: palette.error,\n      bgColor: palette.background\n    },\n    secondary: {\n      color: palette.secondary,\n      border: palette.secondary,\n      bgColor: palette.background\n    },\n    invert: {\n      color: palette.background,\n      border: palette.foreground,\n      bgColor: palette.foreground\n    },\n    gradient: {\n      color: palette.foreground,\n      border: hexFromString(palette.gradient, palette.primary, true),\n      bgColor: palette.gradient\n    }\n  };\n  const filledTypes = ['success', 'warning', 'error', 'secondary'];\n  const style = styles[type];\n  const shouldFilled = filledTypes.includes(type);\n  if (!fill || !shouldFilled) return style;\n  return { ...style,\n    color: style.bgColor,\n    bgColor: style.color\n  };\n};"]},"metadata":{},"sourceType":"module"}