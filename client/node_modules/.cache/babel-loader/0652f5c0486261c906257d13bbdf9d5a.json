{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React, { useEffect, useRef, useMemo, useState } from 'react';\nimport useTheme from '../use-theme';\nimport ImageSkeleton from './image.skeleton';\nimport useRealShape from '../use-real-shape';\nimport useCurrentState from '../use-current-state';\nimport useResize from '../use-resize';\nimport cslx from '../utils/clsx';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  showSkeleton: true,\n  autoResize: true,\n  objectFit: 'scale-down',\n  className: '',\n  maxDelay: 3000\n};\n\nconst Image = ({\n  src,\n  width,\n  height,\n  showSkeleton: showSkeletonProp,\n  className,\n  maxDelay,\n  autoResize,\n  objectFit,\n  ...props\n}) => {\n  const theme = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [showSkeleton, setShowSkeleton] = useState(true);\n  const {\n    w,\n    h\n  } = useMemo(() => {\n    return {\n      w: width ? typeof width === 'number' ? `${width}px` : width : 'auto',\n      h: height ? typeof height === 'number' ? `${height}px` : height : 'auto'\n    };\n  }, [width, height]);\n  const [zoomHeight, setZoomHeight, zoomHeightRef] = useCurrentState(h);\n  const imageRef = useRef(null);\n  const [shape, updateShape] = useRealShape(imageRef);\n  const showAnimation = showSkeletonProp && width && height;\n\n  const imageLoaded = () => {\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (!showAnimation) return;\n    if (!imageRef.current) return;\n\n    if (imageRef.current.complete) {\n      setLoading(false);\n      setShowSkeleton(false);\n    }\n  });\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (showAnimation) {\n        setShowSkeleton(false);\n      }\n\n      clearTimeout(timer);\n    }, maxDelay);\n    return () => clearTimeout(timer);\n  }, [loading]);\n  /**\n   * On mobile devices, the render witdth may be less than CSS width value.\n   * If the image is scaled, set the height manually.\n   * This is to ensure the aspect ratio of the image.\n   *\n   * If the image is auto width, ignore all.\n   */\n\n  useEffect(() => {\n    if (!autoResize) return;\n    const notLoaded = shape.width === 0;\n    const isAutoZoom = zoomHeightRef.current === 'auto';\n    if (notLoaded || !width || !height) return;\n\n    if (shape.width < width) {\n      !isAutoZoom && setZoomHeight('auto');\n    } else {\n      isAutoZoom && setZoomHeight(h);\n    }\n  }, [shape, width]);\n  useResize(() => {\n    if (!autoResize) return;\n    updateShape();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: _JSXStyle.dynamic([[\"2293692961\", [w, zoomHeight, theme.layout.radius, objectFit]]]) + \" \" + (cslx('image', {\n      'image-ready': !loading\n    }, className) || \"\"),\n    children: [showSkeleton && showAnimation && /*#__PURE__*/_jsx(ImageSkeleton, {\n      opacity: loading ? 0.5 : 0\n    }), /*#__PURE__*/_jsx(\"img\", {\n      ref: imageRef,\n      width: width,\n      height: height,\n      onLoad: imageLoaded,\n      src: src,\n      ...props,\n      className: _JSXStyle.dynamic([[\"2293692961\", [w, zoomHeight, theme.layout.radius, objectFit]]]) + \" \" + (props && props.className != null && props.className || \"\")\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"2293692961\",\n      dynamic: [w, zoomHeight, theme.layout.radius, objectFit],\n      children: `.image.__jsx-style-dynamic-selector{width:${w};opacity:0;height:${zoomHeight};margin:0 auto;position:relative;border-radius:${theme.layout.radius};overflow:hidden;max-width:100%;-webkit-transition:-webkit-transform 250ms ease 0ms,opacity 200ms ease-in 0ms;-webkit-transition:transform 250ms ease 0ms,opacity 200ms ease-in 0ms;transition:transform 250ms ease 0ms,opacity 200ms ease-in 0ms;}.image-ready.__jsx-style-dynamic-selector{opacity:1;}img.__jsx-style-dynamic-selector{width:100%;height:100%;object-fit:${objectFit};display:block;}`\n    })]\n  });\n};\n\nImage.defaultProps = defaultProps;\nexport default /*#__PURE__*/React.memo(Image);","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/PI Countries/PI-Countries/PI-Countries/client/node_modules/@nextui-org/react/esm/image/image.js"],"names":["_JSXStyle","React","useEffect","useRef","useMemo","useState","useTheme","ImageSkeleton","useRealShape","useCurrentState","useResize","cslx","jsx","_jsx","jsxs","_jsxs","defaultProps","showSkeleton","autoResize","objectFit","className","maxDelay","Image","src","width","height","showSkeletonProp","props","theme","loading","setLoading","setShowSkeleton","w","h","zoomHeight","setZoomHeight","zoomHeightRef","imageRef","shape","updateShape","showAnimation","imageLoaded","current","complete","timer","setTimeout","clearTimeout","notLoaded","isAutoZoom","dynamic","layout","radius","children","opacity","ref","onLoad","id","memo"],"mappings":"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","sourcesContent":["import _JSXStyle from \"styled-jsx/style\";\nimport React, { useEffect, useRef, useMemo, useState } from 'react';\nimport useTheme from '../use-theme';\nimport ImageSkeleton from './image.skeleton';\nimport useRealShape from '../use-real-shape';\nimport useCurrentState from '../use-current-state';\nimport useResize from '../use-resize';\nimport cslx from '../utils/clsx';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  showSkeleton: true,\n  autoResize: true,\n  objectFit: 'scale-down',\n  className: '',\n  maxDelay: 3000\n};\n\nconst Image = ({\n  src,\n  width,\n  height,\n  showSkeleton: showSkeletonProp,\n  className,\n  maxDelay,\n  autoResize,\n  objectFit,\n  ...props\n}) => {\n  const theme = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [showSkeleton, setShowSkeleton] = useState(true);\n  const {\n    w,\n    h\n  } = useMemo(() => {\n    return {\n      w: width ? typeof width === 'number' ? `${width}px` : width : 'auto',\n      h: height ? typeof height === 'number' ? `${height}px` : height : 'auto'\n    };\n  }, [width, height]);\n  const [zoomHeight, setZoomHeight, zoomHeightRef] = useCurrentState(h);\n  const imageRef = useRef(null);\n  const [shape, updateShape] = useRealShape(imageRef);\n  const showAnimation = showSkeletonProp && width && height;\n\n  const imageLoaded = () => {\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (!showAnimation) return;\n    if (!imageRef.current) return;\n\n    if (imageRef.current.complete) {\n      setLoading(false);\n      setShowSkeleton(false);\n    }\n  });\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (showAnimation) {\n        setShowSkeleton(false);\n      }\n\n      clearTimeout(timer);\n    }, maxDelay);\n    return () => clearTimeout(timer);\n  }, [loading]);\n  /**\n   * On mobile devices, the render witdth may be less than CSS width value.\n   * If the image is scaled, set the height manually.\n   * This is to ensure the aspect ratio of the image.\n   *\n   * If the image is auto width, ignore all.\n   */\n\n  useEffect(() => {\n    if (!autoResize) return;\n    const notLoaded = shape.width === 0;\n    const isAutoZoom = zoomHeightRef.current === 'auto';\n    if (notLoaded || !width || !height) return;\n\n    if (shape.width < width) {\n      !isAutoZoom && setZoomHeight('auto');\n    } else {\n      isAutoZoom && setZoomHeight(h);\n    }\n  }, [shape, width]);\n  useResize(() => {\n    if (!autoResize) return;\n    updateShape();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: _JSXStyle.dynamic([[\"2293692961\", [w, zoomHeight, theme.layout.radius, objectFit]]]) + \" \" + (cslx('image', {\n      'image-ready': !loading\n    }, className) || \"\"),\n    children: [showSkeleton && showAnimation && /*#__PURE__*/_jsx(ImageSkeleton, {\n      opacity: loading ? 0.5 : 0\n    }), /*#__PURE__*/_jsx(\"img\", {\n      ref: imageRef,\n      width: width,\n      height: height,\n      onLoad: imageLoaded,\n      src: src,\n      ...props,\n      className: _JSXStyle.dynamic([[\"2293692961\", [w, zoomHeight, theme.layout.radius, objectFit]]]) + \" \" + (props && props.className != null && props.className || \"\")\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"2293692961\",\n      dynamic: [w, zoomHeight, theme.layout.radius, objectFit],\n      children: `.image.__jsx-style-dynamic-selector{width:${w};opacity:0;height:${zoomHeight};margin:0 auto;position:relative;border-radius:${theme.layout.radius};overflow:hidden;max-width:100%;-webkit-transition:-webkit-transform 250ms ease 0ms,opacity 200ms ease-in 0ms;-webkit-transition:transform 250ms ease 0ms,opacity 200ms ease-in 0ms;transition:transform 250ms ease 0ms,opacity 200ms ease-in 0ms;}.image-ready.__jsx-style-dynamic-selector{opacity:1;}img.__jsx-style-dynamic-selector{width:100%;height:100%;object-fit:${objectFit};display:block;}`\n    })]\n  });\n};\n\nImage.defaultProps = defaultProps;\nexport default /*#__PURE__*/React.memo(Image);"]},"metadata":{},"sourceType":"module"}